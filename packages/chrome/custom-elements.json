{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/constant.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "MODE_DEV",
          "type": {
            "text": "string"
          },
          "default": "'development'"
        },
        {
          "kind": "variable",
          "name": "MODE_PROD",
          "type": {
            "text": "string"
          },
          "default": "'production'"
        },
        {
          "kind": "variable",
          "name": "STORAGE_PROJECTS",
          "type": {
            "text": "string"
          },
          "default": "'wf-bm-projects'"
        },
        {
          "kind": "variable",
          "name": "STORAGE_MANIFEST_PREFIX",
          "type": {
            "text": "string"
          },
          "default": "'wf-bm-manifest-'"
        },
        {
          "kind": "variable",
          "name": "STORAGE_ACTIVE_REQUESTS",
          "type": {
            "text": "string"
          },
          "default": "'wf-bm-active'"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MODE_DEV",
          "declaration": {
            "name": "MODE_DEV",
            "module": "src/constant.ts"
          }
        },
        {
          "kind": "js",
          "name": "MODE_PROD",
          "declaration": {
            "name": "MODE_PROD",
            "module": "src/constant.ts"
          }
        },
        {
          "kind": "js",
          "name": "STORAGE_PROJECTS",
          "declaration": {
            "name": "STORAGE_PROJECTS",
            "module": "src/constant.ts"
          }
        },
        {
          "kind": "js",
          "name": "STORAGE_MANIFEST_PREFIX",
          "declaration": {
            "name": "STORAGE_MANIFEST_PREFIX",
            "module": "src/constant.ts"
          }
        },
        {
          "kind": "js",
          "name": "STORAGE_ACTIVE_REQUESTS",
          "declaration": {
            "name": "STORAGE_ACTIVE_REQUESTS",
            "module": "src/constant.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/interface.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/sw/background.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/layout/constant.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "TAB_PROJECTS",
          "type": {
            "text": "string"
          },
          "default": "'projects'"
        },
        {
          "kind": "variable",
          "name": "TAB_API_MOCKS",
          "type": {
            "text": "string"
          },
          "default": "'mocks'"
        },
        {
          "kind": "variable",
          "name": "TABS",
          "type": {
            "text": "array"
          },
          "default": "[ TAB_API_MOCKS, TAB_PROJECTS, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TAB_PROJECTS",
          "declaration": {
            "name": "TAB_PROJECTS",
            "module": "src/layout/constant.ts"
          }
        },
        {
          "kind": "js",
          "name": "TAB_API_MOCKS",
          "declaration": {
            "name": "TAB_API_MOCKS",
            "module": "src/layout/constant.ts"
          }
        },
        {
          "kind": "js",
          "name": "TABS",
          "declaration": {
            "name": "TABS",
            "module": "src/layout/constant.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/layout/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BrowserMock",
          "members": [
            {
              "kind": "field",
              "name": "bmIsActive",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "currentView",
              "type": {
                "text": "TCurrentView"
              },
              "default": "TAB_API_MOCKS"
            },
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[resetStyle, defaultStyle, style]"
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "viewsMap",
              "type": {
                "text": "object"
              },
              "default": "{ [TAB_PROJECTS]: async () => { await import(\"../views/projects\"); return html` <wf-view-projects></wf-view-projects>`; }, [TAB_API_MOCKS]: async () => { await import(\"../views/mocks\"); return html` <wf-view-mocks></wf-view-mocks>`; }, }"
            },
            {
              "kind": "field",
              "name": "viewLoadTask",
              "default": "new Task(this, { task: async ([currentView]) => this.viewsMap[currentView](), args: () => [this.currentView], })"
            },
            {
              "kind": "field",
              "name": "renderTabLink"
            },
            {
              "kind": "field",
              "name": "renderButtons"
            },
            {
              "kind": "field",
              "name": "handleToggleBm"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-bm-popup",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BrowserMock",
          "declaration": {
            "name": "BrowserMock",
            "module": "src/layout/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-bm-popup",
          "declaration": {
            "name": "BrowserMock",
            "module": "src/layout/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/layout/interface.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/layout/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` :host { display: block; background-color: var(--main-bg); } nav { display: flex; flex-wrap: wrap; background-color: var(--primary); font-size: var(--font-size-l); font-weight: bold; a { position: relative; padding: 16px 24px 14px; color: var(--font-color-iverse); background-color: var(--primary); transition: background-color 400ms ease-in-out; &:after { content: ''; display: block; width: 0; height: 4px; position: absolute; bottom: 0; left: 50%; transform: translateX(-50%); opacity: 0; background-color: var(--font-color-iverse); transition: all 400ms ease-in-out; } &.active { background-color: var(--primary-bright); } &:hover { &:after { opacity: 1; width: 100%; } } } wf-switch { padding: 10px 16px 0 0; margin-left: auto; } } .tabs { padding: 16px 8px; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "src/layout/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/assets/if-defined-AT6sJy1V.js",
      "declarations": [
        {
          "kind": "function",
          "name": "m",
          "parameters": [
            {
              "name": "o"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "o",
          "declaration": {
            "name": "m",
            "module": "dist/assets/if-defined-AT6sJy1V.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/assets/index-0iOqrPvk.js",
      "declarations": [
        {
          "kind": "function",
          "name": "s",
          "parameters": [
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "c",
          "type": {
            "text": "string"
          },
          "default": "\"wf-bm-projects\""
        },
        {
          "kind": "variable",
          "name": "m",
          "type": {
            "text": "string"
          },
          "default": "\"wf-bm-manifest-\""
        },
        {
          "kind": "variable",
          "name": "r"
        },
        {
          "kind": "variable",
          "name": "o"
        },
        {
          "kind": "variable",
          "name": "n"
        },
        {
          "kind": "variable",
          "name": "g"
        },
        {
          "kind": "variable",
          "name": "w"
        },
        {
          "kind": "variable",
          "name": "a",
          "default": "await chrome.storage.local.get()"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "m",
            "module": "dist/assets/index-0iOqrPvk.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "c",
            "module": "dist/assets/index-0iOqrPvk.js"
          }
        },
        {
          "kind": "js",
          "name": "g",
          "declaration": {
            "name": "o",
            "module": "dist/assets/index-0iOqrPvk.js"
          }
        },
        {
          "kind": "js",
          "name": "m",
          "declaration": {
            "name": "g",
            "module": "dist/assets/index-0iOqrPvk.js"
          }
        },
        {
          "kind": "js",
          "name": "r",
          "declaration": {
            "name": "w",
            "module": "dist/assets/index-0iOqrPvk.js"
          }
        },
        {
          "kind": "js",
          "name": "s",
          "declaration": {
            "name": "n",
            "module": "dist/assets/index-0iOqrPvk.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/assets/index-8kCUgaAa.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "r",
          "default": "n"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "wf-view-mocks",
          "declaration": {
            "name": "r",
            "module": "dist/assets/index-8kCUgaAa.js"
          }
        },
        {
          "kind": "js",
          "name": "Component",
          "declaration": {
            "name": "r",
            "module": "dist/assets/index-8kCUgaAa.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/assets/index-B0lMHBeK.js",
      "declarations": [
        {
          "kind": "function",
          "name": "A",
          "parameters": [
            {
              "name": "o"
            },
            {
              "name": "t"
            },
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "F",
          "parameters": [
            {
              "name": "o"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "S",
          "default": "(d=class extends x{constructor(){super(...arguments),this.toastHandler=I(),this.appearance=\"success\",this.renderIcon=t=>({success:i`<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\"> <path d=\"M382-240 154-468l57-57 171 171 367-367 57 57-424 424Z\"/> </svg>`,error:i`<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\"> <path d=\"M440-400v-360h80v360h-80Zm0 200v-80h80v80h-80Z\"/> </svg>`})[t],this.handleCloseClick=()=>this.toastHandler.remove(this.getAttribute(\"id\"))}render(){const{appearance:t}=this;return i` ${this.renderIcon(t)} <div class=\"cnt\"> <slot></slot> </div> <wf-button appearance=\"clean\" size=\"xs\" .onClick=\"${this.handleCloseClick}\"> <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\"> <path d=\"m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z\"/> </svg> </wf-button> `}},d.styles=[j,L],d)"
        },
        {
          "kind": "variable",
          "name": "r"
        },
        {
          "kind": "variable",
          "name": "e"
        },
        {
          "kind": "variable",
          "name": "c",
          "default": "u"
        },
        {
          "kind": "variable",
          "name": "q"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "wf-toast",
          "declaration": {
            "name": "S",
            "module": "dist/assets/index-B0lMHBeK.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-view-projects",
          "declaration": {
            "name": "c",
            "module": "dist/assets/index-B0lMHBeK.js"
          }
        },
        {
          "kind": "js",
          "name": "e",
          "declaration": {
            "name": "A",
            "module": "dist/assets/index-B0lMHBeK.js"
          }
        },
        {
          "kind": "js",
          "name": "i",
          "declaration": {
            "name": "q",
            "module": "dist/assets/index-B0lMHBeK.js"
          }
        },
        {
          "kind": "js",
          "name": "r",
          "declaration": {
            "name": "F",
            "module": "dist/assets/index-B0lMHBeK.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/assets/index-BY48ecOB.js",
      "declarations": [
        {
          "kind": "function",
          "name": "g",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "k",
          "default": "s` h1, h2, h4, h6 { font-weight: bold; } h5, h4 { font-size: var(--font-size-l); } h3, h2 { font-size: 22px; } h1 { font-size: 28px; } dl { dt, dd { margin-bottom: 4px; } dt { font-weight: bold; font-size: var(--font-size-s); } } `"
        },
        {
          "kind": "variable",
          "name": "m",
          "default": "s` .buttons { display: flex; gap: 16px; &.right { justify-content: right; } &.center { justify-content: center; } } `"
        },
        {
          "kind": "variable",
          "name": "r",
          "default": "n"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "wf-button",
          "declaration": {
            "name": "r",
            "module": "dist/assets/index-BY48ecOB.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "m",
            "module": "dist/assets/index-BY48ecOB.js"
          }
        },
        {
          "kind": "js",
          "name": "r",
          "declaration": {
            "name": "g",
            "module": "dist/assets/index-BY48ecOB.js"
          }
        },
        {
          "kind": "js",
          "name": "t",
          "declaration": {
            "name": "k",
            "module": "dist/assets/index-BY48ecOB.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/assets/index-BtIw6G2U.js",
      "declarations": [
        {
          "kind": "function",
          "name": "n",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "e"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "u",
          "declaration": {
            "name": "n",
            "module": "dist/assets/index-BtIw6G2U.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/assets/index-BuCCtiHf.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "s",
          "default": "a"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "wf-projects-list",
          "declaration": {
            "name": "s",
            "module": "dist/assets/index-BuCCtiHf.js"
          }
        },
        {
          "kind": "js",
          "name": "Component",
          "declaration": {
            "name": "s",
            "module": "dist/assets/index-BuCCtiHf.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/assets/index-C_nky-ou.js",
      "declarations": [
        {
          "kind": "function",
          "name": "q",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "s"
            },
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "C"
        },
        {
          "kind": "variable",
          "name": "F",
          "default": "d` `"
        },
        {
          "kind": "variable",
          "name": "I"
        },
        {
          "kind": "class",
          "description": "",
          "name": "w",
          "members": [
            {
              "kind": "field",
              "name": "handleInput"
            },
            {
              "kind": "field",
              "name": "handleUpdate"
            },
            {
              "kind": "field",
              "name": "host",
              "default": "s"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "r",
          "default": "p"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "wf-input",
          "declaration": {
            "name": "r",
            "module": "dist/assets/index-C_nky-ou.js"
          }
        },
        {
          "kind": "js",
          "name": "F",
          "declaration": {
            "name": "w",
            "module": "dist/assets/index-C_nky-ou.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "q",
            "module": "dist/assets/index-C_nky-ou.js"
          }
        },
        {
          "kind": "js",
          "name": "c",
          "declaration": {
            "name": "I",
            "module": "dist/assets/index-C_nky-ou.js"
          }
        },
        {
          "kind": "js",
          "name": "f",
          "declaration": {
            "name": "C",
            "module": "dist/assets/index-C_nky-ou.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/assets/index-Cv3p2W5j.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "b",
          "default": "(c=class extends g{constructor(){super(...arguments),this.disabled=!1,this.render=()=>x(this.childNodes,e=>e.nodeName===\"WF-OPTION\").map((e,t)=>this.renderOption(e,t)),this.handleChange=({target:e})=>{const{value:t}=e;this.disabled||t===this.value||(this.value=t,this.onChange&&this.onChange(this.value))}}renderOption(e,t){const l=`input-${t}`,r=e.getAttribute(\"value\"),o=e.getAttribute(\"appearance\"),i=this.value===r;return n` <div class=\"${A(o)}\"> <input id=\"${l}\" type=\"radio\" name=\"options\" value=\"${r}\" ?disabled=\"${this.disabled}\" ?checked=\"${i}\" @change=\"${this.handleChange}\" /> <label for=\"${l}\"> ${e.cloneNode(!0)} </label> </div> `}connectedCallback(){super.connectedCallback()}},c.styles=[v,I],c)"
        },
        {
          "kind": "variable",
          "name": "p",
          "default": "(u=class extends g{constructor(){super(...arguments),this.value=[],this.disabled=!1,this.required=!1,this.render=()=>n` <label tabindex=\"-1\"> ${this.label} ${$(this.required)} </label> <div class=\"options\"> ${this.renderFields()} </div> ${k(this.error)} ${C(this.hint)} `,this.renderFields=()=>x(this.childNodes,e=>e.nodeName===\"WF-OPTION\").map((e,t)=>this.renderOption(e,t)),this.changeHandlerMap={radio:e=>{e!==this.value&&(this.value=e)},checkbox:e=>{const t=this.value.indexOf(e);t===-1?this.value.push(e):this.value.splice(t,1)}},this.handleChange=({target:e})=>{const{value:t}=e;this.disabled||(this.changeHandlerMap[this.type](t),this.dispatchEvent(new CustomEvent(\"onChange\",{detail:this.value})))}}renderOption(e,t){const l=`input-${t}`,r=e.getAttribute(\"value\"),o=this.value.includes(r);return n` <input id=\"${l}\" type=\"${this.type}\" name=\"${this.name}\" value=\"${r}\" ?disabled=\"${this.disabled}\" ?checked=\"${o}\" @change=\"${this.handleChange}\" /> <label for=\"${l}\"> <span></span> ${e.innerHTML} </label> `}connectedCallback(){this.type=this.hasAttribute(\"multiple\")?\"checkbox\":\"radio\",super.connectedCallback()}},u.styles=[v,S,j,E,M],u)"
        },
        {
          "kind": "variable",
          "name": "h",
          "default": "y"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "wf-option-picker",
          "declaration": {
            "name": "b",
            "module": "dist/assets/index-Cv3p2W5j.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-options",
          "declaration": {
            "name": "p",
            "module": "dist/assets/index-Cv3p2W5j.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-mock-project",
          "declaration": {
            "name": "h",
            "module": "dist/assets/index-Cv3p2W5j.js"
          }
        },
        {
          "kind": "js",
          "name": "Component",
          "declaration": {
            "name": "h",
            "module": "dist/assets/index-Cv3p2W5j.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/assets/index-D5V3lQTl.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "h",
          "default": "(c=class extends ${constructor(){super(...arguments),this.type=\"text\",this.accept=\".json\",this.value=[],this.multiple=!1,this.disabled=!1,this.required=!1,this.input=new P(this),this.renderFileListItems=(s,r)=>b` <li @click=\"${()=>this.handleItemClick(r)}\"> ${s.name} <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\"> <path d=\"M280-120q-33 0-56.5-23.5T200-200v-520h-40v-80h200v-40h240v40h200v80h-40v520q0 33-23.5 56.5T680-120H280Zm400-600H280v520h400v-520ZM360-280h80v-360h-80v360Zm160 0h80v-360h-80v360ZM280-720v520-520Z\"/> </svg> </li> `,this.handleInput=({target:s,type:r})=>{const{files:e}=s,t=`on${U(r)}`;let i=[...e];this.multiple&&(i=[...this.value,...e]),this.input.handleUpdate(t,i)},this.handleBtnClick=()=>{this.inputElement.setAttribute(\"value\",\"\"),this.inputElement.click()},this.handleItemClick=s=>{this.value.splice(s,1),this.requestUpdate()}}render(){return b` <wf-button @onClick=\"${this.handleBtnClick}\" size=\"inherit\" appearance=\"clean\" ?disabled=\"${this.disabled}\"> <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -960 960 960\" > <path d=\"M440-440H200v-80h240v-240h80v240h240v80H520v240h-80v-240Z\"/> </svg> </wf-button> <ul class=\"input\"> ${this.value.map(this.renderFileListItems)} </ul> <input id=\"input\" type=\"file\" value=\"${this.value}\" ?multiple=\"${this.multiple}\" ?disabled=\"${this.disabled}\" accept=\"${this.accept}\" @change=\"${this.handleInput}\" /> <label for=\"input\" class=\"${I({active:this.value.length})}\"> ${this.label} ${j(this.required)} </label> ${B(this.error)} ${M(this.hint)} `}},c.styles=[k,L,V,q,T,et],c)"
        },
        {
          "kind": "variable",
          "name": "d",
          "default": "y"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "wf-file",
          "declaration": {
            "name": "h",
            "module": "dist/assets/index-D5V3lQTl.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-projects-form",
          "declaration": {
            "name": "d",
            "module": "dist/assets/index-D5V3lQTl.js"
          }
        },
        {
          "kind": "js",
          "name": "Component",
          "declaration": {
            "name": "d",
            "module": "dist/assets/index-D5V3lQTl.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/assets/index-DTiZutQf.js",
      "declarations": [
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "s"
            }
          ]
        },
        {
          "kind": "function",
          "name": "i",
          "parameters": [
            {
              "name": "s"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "ot",
          "default": "function(t,e,i){let s=Promise.resolve();if(e&&e.length>0){const n=document.getElementsByTagName(\"link\"),l=document.querySelector(\"meta[property=csp-nonce]\"),a=(l==null?void 0:l.nonce)||(l==null?void 0:l.getAttribute(\"nonce\"));s=Promise.allSettled(e.map(h=>{if(h=St(h,i),h in rt)return;rt[h]=!0;const d=h.endsWith(\".css\"),c=d?'[rel=\"stylesheet\"]':\"\";if(!!i)for(let g=n.length-1;g>=0;g--){const z=n[g];if(z.href===h&&(!d||z.rel===\"stylesheet\"))return}else if(document.querySelector(`link[href=\"${h}\"]${c}`))return;const u=document.createElement(\"link\");if(u.rel=d?\"stylesheet\":xt,d||(u.as=\"script\"),u.crossOrigin=\"\",u.href=h,a&&u.setAttribute(\"nonce\",a),document.head.appendChild(u),d)return new Promise((g,z)=>{u.addEventListener(\"load\",g),u.addEventListener(\"error\",()=>z(new Error(`Unable to preload CSS for ${h}`)))})}))}function o(n){const l=new Event(\"vite:preloadError\",{cancelable:!0});if(l.payload=n,window.dispatchEvent(l),!l.defaultPrevented)throw n}return s.then(n=>{for(const l of n||[])l.status===\"rejected\"&&o(l.reason);return t().catch(o)})}"
        },
        {
          "kind": "variable",
          "name": "n"
        },
        {
          "kind": "variable",
          "name": "l"
        },
        {
          "kind": "variable",
          "name": "a"
        },
        {
          "kind": "variable",
          "name": "d"
        },
        {
          "kind": "variable",
          "name": "c"
        },
        {
          "kind": "variable",
          "name": "$"
        },
        {
          "kind": "variable",
          "name": "E",
          "default": "document"
        },
        {
          "kind": "variable",
          "name": "f"
        },
        {
          "kind": "variable",
          "name": "x"
        },
        {
          "kind": "variable",
          "name": "p"
        },
        {
          "kind": "variable",
          "name": "h"
        },
        {
          "kind": "variable",
          "name": "g"
        },
        {
          "kind": "variable",
          "name": "b",
          "default": "class extends S{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0}createRenderRoot(){var e;const t=super.createRenderRoot();return(e=this.renderOptions).renderBefore??(e.renderBefore=t.firstChild),t}update(t){const e=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(t),this._$Do=Wt(e,this.renderRoot,this.renderOptions)}connectedCallback(){var t;super.connectedCallback(),(t=this._$Do)==null||t.setConnected(!0)}disconnectedCallback(){var t;super.disconnectedCallback(),(t=this._$Do)==null||t.setConnected(!1)}render(){return x}}"
        },
        {
          "kind": "function",
          "name": "_",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "Xt"
        },
        {
          "kind": "class",
          "description": "",
          "name": "Qt",
          "members": [
            {
              "kind": "field",
              "name": "taskComplete",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "hostUpdate"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "method",
              "name": "T"
            },
            {
              "kind": "method",
              "name": "S"
            },
            {
              "kind": "method",
              "name": "run",
              "parameters": [
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "method",
              "name": "abort",
              "parameters": [
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "field",
              "name": "value",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "error",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "status",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "render",
              "parameters": [
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "field",
              "name": "p",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "i",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "v"
            },
            {
              "kind": "field",
              "name": "j"
            },
            {
              "kind": "field",
              "name": "m"
            },
            {
              "kind": "field",
              "name": "k"
            },
            {
              "kind": "field",
              "name": "A"
            },
            {
              "kind": "field",
              "name": "autoRun"
            },
            {
              "kind": "field",
              "default": "(this.u=s.initialValue,this.i=2,this.O=(o=this.T)==null?void 0:o.call(this))"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "wt",
          "default": "$` :host { display: block; font-family: var(--font-family), sans-serif; font-size: var(--font-size); color: var(--font-color); } :host, *, *:before, *:after { box-sizing: border-box; } a { text-decoration: none; } div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video { margin: 0; padding: 0; border: 0; font-size: 100%; font: inherit; vertical-align: baseline; } ul, ol, li { padding: 0; margin: 0; list-style: none; } `"
        },
        {
          "kind": "variable",
          "name": "_e",
          "default": "$` :host { position: relative; } textarea, select, input { font-family: var(--font-family), sans-serif; color: var(--font-color); border-radius: var(--border-radius); border: 1px solid var(--grey-5); padding-top: 20px; padding-bottom: 4px; padding-inline: 16px 40px; height: 54px; width: 100%; max-width: 100%; font-size: var(--font-size-l); outline: none; &:focus-visible, &:focus { border-color: var(--secondary); border-width: 2px; } } textarea, input { &:focus-visible, &:focus { + label { font-size: var(--font-size-s); top: 8px; } } } `"
        },
        {
          "kind": "variable",
          "name": "ae",
          "default": "$` label { position: absolute; top: 20px; font-size: var(--font-size-l); inset-inline-start: 16px; max-width: 100%; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; transition: all 240ms ease-out; color: var(--grey-7); } label.active { font-size: var(--font-size-s); top: 8px; } :host([inverse]) { label { color: var(--font-color-iverse); } } .asterisks { color: var(--grey-3); } `"
        },
        {
          "kind": "variable",
          "name": "le",
          "default": "$` .hint { display: block; padding: 4px 0 0 8px; font-size: var(--font-size-s); color: var(--grey-3); } `"
        },
        {
          "kind": "variable",
          "name": "he",
          "default": "$` .err { display: block; padding: 4px 0 0 8px; color: var(--error); } :host([error]) { label { color: var(--error); } textarea, select, input { border-color: var(--error); } } `"
        },
        {
          "kind": "variable",
          "name": "ce"
        },
        {
          "kind": "variable",
          "name": "de"
        },
        {
          "kind": "variable",
          "name": "pe"
        },
        {
          "kind": "function",
          "name": "j",
          "parameters": [
            {
              "name": "r"
            },
            {
              "name": "t"
            },
            {
              "name": "e"
            },
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "C",
          "default": "(k=class extends b{constructor(){super(...arguments),this.checked=!0,this.disabled=!1,this.required=!1,this.handleChange=()=>{this.disabled||(this.checked=!this.checked,this.dispatchEvent(new CustomEvent(\"onChange\",{detail:this.checked})))}}render(){return f` <input type=\"checkbox\" id=\"switch\" ?checked=\"${this.checked}\" @change=\"${this.handleChange}\" /> <label for=\"switch\"> <span></span> <slot></slot> ${pe(this.required)} </label> ${ce(this.error)} ${de(this.hint)} `}},k.styles=[wt,le,he,ae,ne],k)"
        },
        {
          "kind": "variable",
          "name": "X",
          "default": "et"
        },
        {
          "kind": "variable",
          "name": "D",
          "default": "st"
        },
        {
          "kind": "variable",
          "name": "N",
          "default": "it"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "wf-switch",
          "declaration": {
            "name": "C",
            "module": "dist/assets/index-DTiZutQf.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-progress",
          "declaration": {
            "name": "X",
            "module": "dist/assets/index-DTiZutQf.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-error",
          "declaration": {
            "name": "D",
            "module": "dist/assets/index-DTiZutQf.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-bm-popup",
          "declaration": {
            "name": "N",
            "module": "dist/assets/index-DTiZutQf.js"
          }
        },
        {
          "kind": "js",
          "name": "E",
          "declaration": {
            "name": "p",
            "module": "dist/assets/index-DTiZutQf.js"
          }
        },
        {
          "kind": "js",
          "name": "_",
          "declaration": {
            "name": "ot",
            "module": "dist/assets/index-DTiZutQf.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "le",
            "module": "dist/assets/index-DTiZutQf.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "he",
            "module": "dist/assets/index-DTiZutQf.js"
          }
        },
        {
          "kind": "js",
          "name": "c",
          "declaration": {
            "name": "pe",
            "module": "dist/assets/index-DTiZutQf.js"
          }
        },
        {
          "kind": "js",
          "name": "d",
          "declaration": {
            "name": "wt",
            "module": "dist/assets/index-DTiZutQf.js"
          }
        },
        {
          "kind": "js",
          "name": "e",
          "declaration": {
            "name": "Xt",
            "module": "dist/assets/index-DTiZutQf.js"
          }
        },
        {
          "kind": "js",
          "name": "f",
          "declaration": {
            "name": "_e",
            "module": "dist/assets/index-DTiZutQf.js"
          }
        },
        {
          "kind": "js",
          "name": "g",
          "declaration": {
            "name": "ce",
            "module": "dist/assets/index-DTiZutQf.js"
          }
        },
        {
          "kind": "js",
          "name": "h",
          "declaration": {
            "name": "Qt",
            "module": "dist/assets/index-DTiZutQf.js"
          }
        },
        {
          "kind": "js",
          "name": "i",
          "declaration": {
            "name": "$",
            "module": "dist/assets/index-DTiZutQf.js"
          }
        },
        {
          "kind": "js",
          "name": "j",
          "declaration": {
            "name": "de",
            "module": "dist/assets/index-DTiZutQf.js"
          }
        },
        {
          "kind": "js",
          "name": "l",
          "declaration": {
            "name": "ae",
            "module": "dist/assets/index-DTiZutQf.js"
          }
        },
        {
          "kind": "js",
          "name": "n",
          "declaration": {
            "name": "_",
            "module": "dist/assets/index-DTiZutQf.js"
          }
        },
        {
          "kind": "js",
          "name": "r",
          "declaration": {
            "name": "b",
            "module": "dist/assets/index-DTiZutQf.js"
          }
        },
        {
          "kind": "js",
          "name": "x",
          "declaration": {
            "name": "f",
            "module": "dist/assets/index-DTiZutQf.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/assets/index-UhgdDCWt.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "s",
          "default": "i"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "wf-mock-projects",
          "declaration": {
            "name": "s",
            "module": "dist/assets/index-UhgdDCWt.js"
          }
        },
        {
          "kind": "js",
          "name": "Component",
          "declaration": {
            "name": "s",
            "module": "dist/assets/index-UhgdDCWt.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/button/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "TAppearance"
              },
              "default": "'primary'"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "TType"
              },
              "default": "'button'"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "TSize"
              },
              "default": "'m'"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "string"
              },
              "default": "'_self'"
            },
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[defaultStyle, style]"
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "renderButton",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "renderLink",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "handleClick"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "src/component/button/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-button",
          "declaration": {
            "name": "Component",
            "module": "src/component/button/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/button/interface.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/component/button/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` :host { display: inline-flex; align-items: center; justify-content: center; } :host(:focus-visible) { outline: 0; } :host([disabled]) { .cta { opacity: .6; cursor: not-allowed; pointer-events: none; } } .cta { border: 2px solid transparent; cursor: pointer; border-radius: 999em; transition: all 300ms ease-in-out; background-color: transparent; } ::slotted(svg) { width: 24px; height: 24px; fill: var(--grey-0); transition: fill 300ms ease-in-out; } .xs, .s { font-size: var(--font-size-s); ::slotted(svg) { width: 18px; height: 18px; } } .xs { padding: 2px 8px; } .s { padding: 4px 12px; } .m { padding: 8px 16px; } .l, .xl { font-size: var(--font-size-l); ::slotted(svg) { width: 32px; height: 32px; } } .l { padding: 12px 24px; } .xl { padding: 16px 36px; } .inherit { padding: inherit; font-size: inherit; width: inherit; height: inherit; border-radius: inherit; } .primary, .secondary, .tertiary { color: var(--grey-0); } .clean { background-color: rgba(0,0,0, 0); border-color: rgba(0,0,0, 0); &:hover, &:focus, &:focus-visible { background-color: var(--primary-inverse); } ::slotted(svg) { fill: var(--grey-7); } } .primary { background-color: var(--primary); border-color: var(--primary); &:hover, &:focus, &:focus-visible { background-color: var(--primary-dark); border-color: var(--primary-dark); } } .secondary { background-color: var(--secondary); border-color: var(--secondary); &:hover, &:focus, &:focus-visible { background-color: var(--secondary-dark); border-color: var(--secondary-dark); } } .tertiary { background-color: var(--tertiary); border-color: var(--tertiary); &:hover, &:focus, &:focus-visible { background-color: var(--tertiary-dark); border-color: var(--tertiary-dark); } } .primary-outline, .primary-clean { color: var(--primary); ::slotted(svg) { fill: var(--primary); } &:hover, &:focus, &:focus-visible { color: var(--primary-dark); ::slotted(svg) { fill: var(--primary-dark); } } } .primary-outline { border-color: var(--primary); &:hover, &:focus, &:focus-visible { border-color: var(--primary-dark); } } .secondary-outline, .secondary-clean { color: var(--secondary); ::slotted(svg) { fill: var(--secondary); } &:hover, &:focus, &:focus-visible { color: var(--secondary-dark); ::slotted(svg) { fill: var(--secondary-dark); } } } .secondary-outline { border-color: var(--secondary); &:hover, &:focus, &:focus-visible { border-color: var(--secondary-dark); } } .tertiary-outline, .tertiary-clean { color: var(--tertiary); ::slotted(svg) { fill: var(--tertiary); } &:hover, &:focus, &:focus-visible { color: var(--tertiary-dark); ::slotted(svg) { fill: var(--tertiary-dark); } } } .tertiary-outline { border-color: var(--tertiary); &:hover, &:focus, &:focus-visible { border-color: var(--tertiary-dark); } } `"
        },
        {
          "kind": "variable",
          "name": "buttonsWrapperStyles",
          "default": "css` .buttons { display: flex; gap: 16px; &.right { justify-content: right; } &.center { justify-content: center; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "src/component/button/style.ts"
          }
        },
        {
          "kind": "js",
          "name": "buttonsWrapperStyles",
          "declaration": {
            "name": "buttonsWrapperStyles",
            "module": "src/component/button/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/input/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'text'"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "hint",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "FormFieldController<Component>"
              },
              "default": "new FormFieldController(this)"
            },
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[defaultStyle, formStyle, formHintStyle, formErrorStyle, labelStyle, style]"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "src/component/input/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-input",
          "declaration": {
            "name": "Component",
            "module": "src/component/input/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/input/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "src/component/input/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/option-picker/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "onChange",
              "type": {
                "text": "(value: typeof this.value) => void"
              }
            },
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[defaultStyle, style]"
            },
            {
              "kind": "field",
              "name": "render"
            },
            {
              "kind": "method",
              "name": "renderOption",
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "HTMLInputElement"
                  }
                },
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "handleChange"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "src/component/option-picker/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-option-picker",
          "declaration": {
            "name": "Component",
            "module": "src/component/option-picker/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/option-picker/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` :host { display: flex; gap: 16px; flex-wrap: nowrap; position: relative; } input { opacity: 0; appearance: none; margin: 0; position: absolute; &:focus-visible { outline: none; } } label { cursor: pointer; display: inline-flex; align-items: center; font-weight: bold; font-size: var(--font-size-l); top: unset; transform: unset; inset-inline-start: unset; border-radius: 999em; border: 1px solid var(--primary); color: var(--primary); padding: 8px 24px; background-color: var(--main-bg); transition: color 200ms ease-out, background-color 200ms ease-out; overflow: hidden; } input:checked + label { background-color: var(--primary-bright); color: var(--font-color-iverse); } .success { label { border-color: var(--success); color: var(--success); } input:checked + label { background-color: var(--success-bg); } } .error { label { border-color: var(--error); color: var(--error); } input:checked + label { background-color: var(--error-bg); } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "src/component/option-picker/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/options/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | string[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "hint",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'radio' | 'checkbox'"
              }
            },
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[defaultStyle, formHintStyle, formErrorStyle, labelStyle, style]"
            },
            {
              "kind": "field",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "renderFields"
            },
            {
              "kind": "method",
              "name": "renderOption",
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "HTMLInputElement"
                  }
                },
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "changeHandlerMap",
              "type": {
                "text": "{[key: string]: (value: string) => void}"
              },
              "default": "{ radio: (value) => { if(value !== this.value) { this.value = value; } }, checkbox: (value) => { const index = this.value.indexOf(value); if(index === -1) { (this.value as string[]).push(value); } else { (this.value as string[]).splice(index, 1); } } }"
            },
            {
              "kind": "field",
              "name": "handleChange"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "src/component/options/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-options",
          "declaration": {
            "name": "Component",
            "module": "src/component/options/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/options/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` :host { position: relative; } label { position: unset; display: block; top: unset; transform: unset; inset-inline-start: unset; margin-bottom: 16px; } .options { display: flex; gap: 16px 32px; flex-wrap: nowrap; label { cursor: pointer; display: inline-flex; align-items: center; overflow: visible; margin-bottom: 0; span { position: relative; display: inline-block; width: 20px; height: 20px; border-radius: 50%; margin-right: 8px; border: 1px solid var(--grey-5); transition: opacity 200ms ease-out; margin-top: -2px; &:before { content: ''; display: inline-block; width: 12px; height: 12px; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); border-radius: 50%; opacity: .2; background-color: var(--grey-5); transition: opacity 200ms ease-out; } } } } input { opacity: 0; appearance: none; margin: 0; position: absolute; &:focus-visible { outline: none; + label span { box-shadow: 0 0 1px 2px var(--secondary); } } } input[type=\"checkbox\"] + label span { border-radius: 6px; &:before { border-radius: 4px; } } input:checked + label span { border-color: var(--primary) !important; border-width: 2px; &:before { opacity: 1; background-color: var(--primary); } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "src/component/options/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/file/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'text'"
            },
            {
              "kind": "field",
              "name": "accept",
              "type": {
                "text": "string"
              },
              "default": "'.json'"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "File[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "hint",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "inputElement",
              "type": {
                "text": "HTMLInputElement"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "FormFieldController<Component>"
              },
              "default": "new FormFieldController(this)"
            },
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[defaultStyle, formStyle, formHintStyle, formErrorStyle, labelStyle, style]"
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "renderFileListItems"
            },
            {
              "kind": "field",
              "name": "handleInput"
            },
            {
              "kind": "field",
              "name": "handleBtnClick"
            },
            {
              "kind": "field",
              "name": "handleItemClick"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "src/component/file/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-file",
          "declaration": {
            "name": "Component",
            "module": "src/component/file/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/file/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` :host { position: relative; } input { position: absolute; overflow: hidden; padding: 0; border: 0; margin: -1px; block-size: 1px; clip: rect(0px, 0px, 0px, 0px); inline-size: 1px; visibility: inherit; white-space: nowrap; } .input { font-family: var(--font-family), sans-serif; color: var(--font-color); border-radius: var(--border-radius); border: 1px solid var(--grey-5); padding-top: 20px; padding-bottom: 4px; padding-inline: 16px 60px; min-height: 54px; width: 100%; max-width: 100%; font-size: var(--font-size-l); outline: none; } li { padding: 4px 0; cursor: pointer; display: flex; gap: 8px; align-items: center; svg { width: 16px; height: 16px; fill: var(--secondary); } } wf-button { position: absolute; top: 1px; right: 1px; height: 52px; width: 52px; border-radius: 0 var(--border-radius) var(--border-radius) 0; &:focus-visible, &:focus { + .input { border-color: var(--secondary); border-width: 2px; } } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "src/component/file/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/collapse/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "field",
              "name": "isOpen",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "title",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "onToggle",
              "type": {
                "text": "(checked: typeof this.isOpen, id?) => void"
              }
            },
            {
              "kind": "field",
              "name": "cnt",
              "type": {
                "text": "HTMLDivElement"
              }
            },
            {
              "kind": "field",
              "name": "wrp",
              "type": {
                "text": "HTMLDivElement"
              }
            },
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[defaultStyle, style]"
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "method",
              "name": "firstUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "_changedProperties",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "handleChange"
            },
            {
              "kind": "field",
              "name": "handleWindowResize"
            },
            {
              "kind": "field",
              "name": "getMaxHeight"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "src/component/collapse/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-collapse",
          "declaration": {
            "name": "Component",
            "module": "src/component/collapse/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/collapse/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` :host { position: relative; } input { position: absolute; opacity: 0; appearance: none; margin: 0; &:focus-visible, &:focus { outline: none; + label { border-color: var(--secondary); } } &:checked + label { &:after { width: 100%; opacity: 1; } svg { transform: translateY(-50%) rotate(-90deg); } } } label { display: block; width: 100%; font-size: var(--font-size-l); padding: 20px 0 16px; padding-inline: 16px 40px; cursor: pointer; position: relative; border: 1px solid var(--grey-5); border-radius: 8px 8px 0 0; &:after { content: ''; display: block; width: 0; height: 1px; //background-color: var(--grey-5); position: absolute; top: 100%; left: 50%; opacity: 0; transform: translateX(-50%); transition: width 600ms ease-in-out, opacity 200ms ease-in; } } svg { width: 36px; height: 36px; fill: var(--grey-7); position: absolute; right: 12px; top: 50%; transition: transform 260ms ease-in-out; transform: translateY(-50%) rotate(90deg); filter: drop-shadow(1px 2px 2px rgba(0, 0, 0, .2 )); } #cnt { max-height: 0; overflow: hidden; transition: max-height ease-in-out 600ms; border: 1px solid var(--grey-5); border-top: 0; border-radius: 0 0 8px 8px; } #wrp { padding: var(--collapse-padding); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "src/component/collapse/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/textarea/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'text'"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "hint",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "FormFieldController<Component>"
              },
              "default": "new FormFieldController(this)"
            },
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[defaultStyle, formHintStyle, formErrorStyle, formStyle, labelStyle, style]"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "src/component/textarea/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-textarea",
          "declaration": {
            "name": "Component",
            "module": "src/component/textarea/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/textarea/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` textarea { height: 162px; min-width: 100%; padding-top: 28px; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "src/component/textarea/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/toast/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "field",
              "name": "toastHandler"
            },
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "TNotificationTypes"
              },
              "default": "'success'"
            },
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[defaultStyle, style]"
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "renderIcon"
            },
            {
              "kind": "field",
              "name": "handleCloseClick"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "src/component/toast/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-toast",
          "declaration": {
            "name": "Component",
            "module": "src/component/toast/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/toast/interface.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/component/toast/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` :host { padding: 16px; display: grid; grid-template-columns: 40px auto 40px; align-items: center; max-width: 50vw; min-width: 25vw; margin-left: 0; border-left: 4px solid var(--grey-5); background-color: var(--grey-0); box-shadow: var(--box-shadow); margin-bottom: 12px; transition: all 500ms ease-out; &:last-child { margin-bottom: 0; } } :host(.fade-out) { margin-left: -100vw; opacity: 0; } svg { fill: var(--grey-5); width: 24px; filter: drop-shadow(1px 2px 2px rgba(0, 0, 0, .2 )); } :host([appearance=\"success\"]) { background-color: var(--success-bg); border-color: var(--success); color: var(--grey-0); svg { fill: var(--grey-0); } > svg { fill: var(--success); } } :host([appearance=\"error\"]) { background-color: var(--error-bg); border-color: var(--error); color: var(--grey-0); svg { fill: var(--grey-0); } > svg { fill: var(--error); } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "src/component/toast/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/progress/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[style]"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "src/component/progress/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-progress",
          "declaration": {
            "name": "Component",
            "module": "src/component/progress/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/progress/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` :host { display: none; } :host([visible]) { display: block; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 60px; aspect-ratio: 1; &:before, &:after { content: \"\"; position: absolute; border-radius: 99em; animation: progressAni 2.5s infinite; background: var(--grey-1); border: 4px solid; box-shadow: var(--box-shadow); } &:before { border-color: var(--primary); } &:after { border-color: var(--secondary); animation-delay: -1.25s; } } @keyframes progressAni { 0% { inset: 0 34px 34px 0; } 12.5% { inset: 0 34px 0 0; } 25% { inset: 34px 34px 0 0; } 37.5% { inset: 34px 0 0 0; } 50% { inset: 34px 0 0 34px; } 62.5% { inset: 0 0 0 34px; } 75% { inset: 0 0 34px 34px; } 87.5% { inset: 0 0 34px 0; } 100% { inset: 0 34px 34px 0; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "src/component/progress/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/views/mocks/constant.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "VIEW_PROJECTS",
          "type": {
            "text": "string"
          },
          "default": "'projects'"
        },
        {
          "kind": "variable",
          "name": "VIEW_PROJECT",
          "type": {
            "text": "string"
          },
          "default": "'project'"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VIEW_PROJECTS",
          "declaration": {
            "name": "VIEW_PROJECTS",
            "module": "src/views/mocks/constant.ts"
          }
        },
        {
          "kind": "js",
          "name": "VIEW_PROJECT",
          "declaration": {
            "name": "VIEW_PROJECT",
            "module": "src/views/mocks/constant.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/views/mocks/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "view",
              "type": {
                "text": "TView"
              },
              "default": "VIEW_PROJECT"
            },
            {
              "kind": "field",
              "name": "selectedProject",
              "type": {
                "text": "IProject | undefined"
              },
              "default": "{ id: \"m52a0k6iixlc4j928pr\", name: \"Test Projekt 1\", path: \"/Users/d_wessner/projects/wesflo/browser-mock/playground/mock/manifest.json\", pathPartials: [\"\", \"Users\", \"d_wessner\", \"projects\", \"wesflo\", \"browser-mock\", \"playground\", \"mock\"], active: true }"
            },
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[defaultStyle, textStyle, style]"
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "views",
              "type": {
                "text": "object"
              },
              "default": "{ [VIEW_PROJECTS]: () => { import(\"./component/projects\"); return html` <wf-mock-projects @onOpenProject=\"${this.handleOpenProject}\"></wf-mock-projects>`; }, [VIEW_PROJECT]: () => { import(\"./component/project\"); return html` <wf-mock-project .project=\"${this.selectedProject}\" @onCancel=\"${this.showList}\"></wf-mock-project>`; } }"
            },
            {
              "kind": "field",
              "name": "viewTask",
              "type": {
                "text": "Task<[TView]>"
              },
              "default": "new Task(this, { task: async ([view]) => { if (this.views[view]) { return this.views[this.view](); } return html` <wf-error></wf-error>`; }, args: () => [this.view], })"
            },
            {
              "kind": "field",
              "name": "handleOpenProject"
            },
            {
              "kind": "field",
              "name": "showList"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Component",
          "declaration": {
            "name": "Component",
            "module": "src/views/mocks/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-view-mocks",
          "declaration": {
            "name": "Component",
            "module": "src/views/mocks/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/views/mocks/interface.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/views/mocks/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` :host * { margin-bottom: 16px; } ep-collapse { margin-bottom: 8px; } :host *, ep-collapse { &:last-child { margin-bottom: 0; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "src/views/mocks/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/select/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "hint",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[defaultStyle, formHintStyle, formErrorStyle, formStyle, labelStyle, style]"
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "renderSelectOptions"
            },
            {
              "kind": "field",
              "name": "handleChange"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "src/component/select/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-select",
          "declaration": {
            "name": "Component",
            "module": "src/component/select/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/select/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` select { appearance: none; cursor: pointer; overflow: hidden; text-overflow: ellipsis; } .hide { color: transparent; } svg { position: absolute; top: 50%; right: 16px; transform: translateY(-50%); fill: var(--grey-7); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "src/component/select/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/switch/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "hint",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[defaultStyle, formHintStyle, formErrorStyle, labelStyle, style]"
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "handleChange"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "src/component/switch/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-switch",
          "declaration": {
            "name": "Component",
            "module": "src/component/switch/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/switch/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` input { position: absolute; opacity: 0; appearance: none; margin: 0; &:focus-visible { outline: none; + label { box-shadow: 0 0 1px 2px var(--secondary); } } &:checked + label span { &:before { background: var(--primary); } &:after { background: var(--primary); left: 25px; } } } label { position: relative; cursor: pointer; display: flex; align-items: center; top: unset; transform: unset; inset-inline-start: unset; overflow: visible; } span { position: relative; display: inline-block; padding: 8px 4px; margin-right: 8px; &:before, &:after { content: ''; display: block; transition: all 300ms ease-out; } &:before { width: 40px; height: 12px; border-radius: 999em; background: var(--grey-7); opacity: .4; } &:after { position: absolute; top: 50%; transform: translateY(-50%); left: 0; width: 24px; height: 24px; border-radius: 50%; background: var(--grey-7); box-shadow: var(--box-shadow); } } :host([inverse]) { input { &:checked + label span { &:before { background: var(--primary-inverse); } &:after { background: var(--primary-inverse); } } } span { &:before { background: var(--grey-3); } &:after { background: var(--grey-5); } } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "src/component/switch/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/views/error/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ErrorAsync",
          "members": [
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "styles",
              "static": true,
              "default": "css` :host { display: block; } `"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-error",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ErrorAsync",
          "declaration": {
            "name": "ErrorAsync",
            "module": "src/views/error/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-error",
          "declaration": {
            "name": "ErrorAsync",
            "module": "src/views/error/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/views/projects/constant.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "VIEW_LIST",
          "type": {
            "text": "string"
          },
          "default": "'list'"
        },
        {
          "kind": "variable",
          "name": "VIEW_NEW",
          "type": {
            "text": "string"
          },
          "default": "'new'"
        },
        {
          "kind": "variable",
          "name": "VIEW_EDIT",
          "type": {
            "text": "string"
          },
          "default": "'edit'"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VIEW_LIST",
          "declaration": {
            "name": "VIEW_LIST",
            "module": "src/views/projects/constant.ts"
          }
        },
        {
          "kind": "js",
          "name": "VIEW_NEW",
          "declaration": {
            "name": "VIEW_NEW",
            "module": "src/views/projects/constant.ts"
          }
        },
        {
          "kind": "js",
          "name": "VIEW_EDIT",
          "declaration": {
            "name": "VIEW_EDIT",
            "module": "src/views/projects/constant.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/views/projects/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "collapses",
              "type": {
                "text": "NodeListOf<CollapseComponent>"
              }
            },
            {
              "kind": "field",
              "name": "selectedProject",
              "type": {
                "text": "IProject | undefined"
              }
            },
            {
              "kind": "field",
              "name": "view",
              "type": {
                "text": "TView"
              },
              "default": "VIEW_LIST"
            },
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[defaultStyle, textStyle, style]"
            },
            {
              "kind": "field",
              "name": "toast"
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "editProject"
            },
            {
              "kind": "field",
              "name": "handleFormSubmit"
            },
            {
              "kind": "field",
              "name": "handleDeleteProject"
            },
            {
              "kind": "field",
              "name": "addNewProject"
            },
            {
              "kind": "field",
              "name": "handleCancel"
            },
            {
              "kind": "field",
              "name": "views",
              "type": {
                "text": "object"
              },
              "default": "{ [VIEW_NEW]: () => { import(\"./component/form\"); return html` <wf-projects-form @onSubmit=\"${this.handleFormSubmit}\"></wf-projects-form>`; }, [VIEW_EDIT]: () => { import(\"./component/form\"); return html` <wf-projects-form @onSubmit=\"${this.handleFormSubmit}\" @onCancel=\"${this.handleCancel}\" @onDelete=\"${this.handleDeleteProject}\" .values=\"${ifDefined(this.selectedProject)}\" isUpdate></wf-projects-form>` }, [VIEW_LIST]: () => { import(\"./component/list\"); return html` <wf-projects-list @onEdit=\"${this.editProject}\"></wf-projects-list>`; } }"
            },
            {
              "kind": "field",
              "name": "setView"
            },
            {
              "kind": "field",
              "name": "viewTask",
              "type": {
                "text": "Task<[TView]>"
              },
              "default": "new Task(this, { task: async ([view]) => { if (this.views[view]) { return this.views[this.view](); } return html` <wf-error></wf-error>`; }, args: () => [this.view], })"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Component",
          "declaration": {
            "name": "Component",
            "module": "src/views/projects/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-view-projects",
          "declaration": {
            "name": "Component",
            "module": "src/views/projects/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/views/projects/interface.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/views/projects/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; } wf-button { margin-bottom: 16px; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "src/views/projects/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/generateRequestId/index.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "generateRequestId",
          "parameters": [
            {
              "name": "req",
              "type": {
                "text": "IManifestRequest"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "generateRequestId",
          "declaration": {
            "name": "generateRequestId",
            "module": "src/util/generateRequestId/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/jsonFileContent/index.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "jsonFileContent",
          "parameters": [
            {
              "name": "file"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "jsonFileContent",
          "declaration": {
            "name": "jsonFileContent",
            "module": "src/util/jsonFileContent/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/formField/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FormFieldController",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "T"
              },
              "privacy": "private",
              "default": "host"
            },
            {
              "kind": "field",
              "name": "handleInput"
            },
            {
              "kind": "field",
              "name": "handleUpdate"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormFieldController",
          "declaration": {
            "name": "FormFieldController",
            "module": "src/util/formField/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/formController/constant.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "inputFieldTypes",
          "type": {
            "text": "array"
          },
          "default": "[ 'wf-input', 'wf-switch', 'wf-select', 'wf-textarea', 'wf-options', 'wf-file', ]"
        },
        {
          "kind": "variable",
          "name": "inputFieldTypesChangeOnly",
          "type": {
            "text": "array"
          },
          "default": "[ 'wf-switch', 'wf-textarea', 'wf-options', ]"
        },
        {
          "kind": "variable",
          "name": "errorMessages",
          "type": {
            "text": "object"
          },
          "default": "{ required: 'This field is required', minLength: 'This field must be at least {min-length} characters long', maxLength: 'This field must be at most {max-length} characters long', min: 'This field must be at least {min}', max: 'This field must be at most {max}', regex: 'This field does not match the required pattern', secure: 'This field is not valid', }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "inputFieldTypes",
          "declaration": {
            "name": "inputFieldTypes",
            "module": "src/util/formController/constant.ts"
          }
        },
        {
          "kind": "js",
          "name": "inputFieldTypesChangeOnly",
          "declaration": {
            "name": "inputFieldTypesChangeOnly",
            "module": "src/util/formController/constant.ts"
          }
        },
        {
          "kind": "js",
          "name": "errorMessages",
          "declaration": {
            "name": "errorMessages",
            "module": "src/util/formController/constant.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/formController/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FormController",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "T"
              },
              "privacy": "private",
              "default": "host"
            },
            {
              "kind": "field",
              "name": "checks",
              "type": {
                "text": "TChecks"
              },
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "values",
              "type": {
                "text": "unknown"
              },
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "invalidFields",
              "type": {
                "text": "string[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_isValide",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "!this.invalidFields.length"
            },
            {
              "kind": "field",
              "name": "validateFormField"
            },
            {
              "kind": "field",
              "name": "handleInput",
              "type": {
                "text": "EventListener"
              }
            },
            {
              "kind": "field",
              "name": "handleChange",
              "type": {
                "text": "EventListener"
              }
            },
            {
              "kind": "field",
              "name": "handleBlur",
              "type": {
                "text": "EventListener"
              }
            },
            {
              "kind": "field",
              "name": "addEventListeners"
            },
            {
              "kind": "field",
              "name": "removeEventListeners"
            },
            {
              "kind": "field",
              "name": "toggleEventListeners"
            },
            {
              "kind": "field",
              "name": "setInitialChecks"
            },
            {
              "kind": "field",
              "name": "defaultCheckMap",
              "type": {
                "text": "object"
              },
              "default": "{ required: required, min: min, max: max, minLength: minLength, maxLength: maxLength, }"
            },
            {
              "kind": "field",
              "name": "addCheckToArray"
            },
            {
              "kind": "field",
              "name": "getDefaultValidationAttributes"
            },
            {
              "kind": "field",
              "name": "isValide"
            },
            {
              "kind": "field",
              "name": "validate"
            },
            {
              "kind": "field",
              "name": "getValues"
            },
            {
              "kind": "field",
              "name": "setValue"
            },
            {
              "kind": "field",
              "name": "setInitialValues"
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostDisconnected"
            },
            {
              "kind": "field",
              "default": "(this.checks = checks)"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormController",
          "declaration": {
            "name": "FormController",
            "module": "src/util/formController/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/formController/interface.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/util/nodeListHelper/index.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "filter",
          "parameters": [
            {
              "name": "list",
              "type": {
                "text": "NodeListOf<Node> | HTMLCollectionOf<Element>"
              }
            },
            {
              "name": "predicate",
              "type": {
                "text": "(search: Node | Element, index?: number) => boolean"
              }
            },
            {
              "name": "args",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "find",
          "parameters": [
            {
              "name": "list",
              "type": {
                "text": "NodeListOf<Node> | HTMLCollectionOf<Element>"
              }
            },
            {
              "name": "predicate",
              "type": {
                "text": "(search: Node | Element, index?: number) => boolean"
              }
            },
            {
              "name": "args",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "forEach",
          "parameters": [
            {
              "name": "list",
              "type": {
                "text": "NodeListOf<Node> | HTMLCollectionOf<Element>"
              }
            },
            {
              "name": "predicate",
              "type": {
                "text": "(search: Node | Element, index?: number) => void"
              }
            },
            {
              "name": "args",
              "type": {
                "text": "any"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "map",
          "parameters": [
            {
              "name": "list",
              "type": {
                "text": "NodeListOf<Node> | HTMLCollectionOf<Element>"
              }
            },
            {
              "name": "predicate",
              "type": {
                "text": "(search: Node | Element, index?: number) => any"
              }
            },
            {
              "name": "args",
              "type": {
                "text": "any"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "filter",
          "declaration": {
            "name": "filter",
            "module": "src/util/nodeListHelper/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "find",
          "declaration": {
            "name": "find",
            "module": "src/util/nodeListHelper/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "forEach",
          "declaration": {
            "name": "forEach",
            "module": "src/util/nodeListHelper/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "map",
          "declaration": {
            "name": "map",
            "module": "src/util/nodeListHelper/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/storage/index.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "getStorageItem",
          "parameters": [
            {
              "name": "key",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "setStorageItem",
          "parameters": [
            {
              "name": "key",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "obj",
              "type": {
                "text": "Object"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "mergeStorageItem",
          "parameters": [
            {
              "name": "key",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "obj",
              "type": {
                "text": "Object"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "removeStorageItem",
          "parameters": [
            {
              "name": "key",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getStorageItem",
          "declaration": {
            "name": "getStorageItem",
            "module": "src/util/storage/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "setStorageItem",
          "declaration": {
            "name": "setStorageItem",
            "module": "src/util/storage/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "mergeStorageItem",
          "declaration": {
            "name": "mergeStorageItem",
            "module": "src/util/storage/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "removeStorageItem",
          "declaration": {
            "name": "removeStorageItem",
            "module": "src/util/storage/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/style/defaultStyle.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "defaultStyle",
          "default": "css` :host { display: block; font-family: var(--font-family), sans-serif; font-size: var(--font-size); color: var(--font-color); } :host, *, *:before, *:after { box-sizing: border-box; } a { text-decoration: none; } div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video { margin: 0; padding: 0; border: 0; font-size: 100%; font: inherit; vertical-align: baseline; } ul, ol, li { padding: 0; margin: 0; list-style: none; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "defaultStyle",
          "declaration": {
            "name": "defaultStyle",
            "module": "src/util/style/defaultStyle.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/style/formStyle.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "formStyle",
          "default": "css` :host { position: relative; } textarea, select, input { font-family: var(--font-family), sans-serif; color: var(--font-color); border-radius: var(--border-radius); border: 1px solid var(--grey-5); padding-top: 20px; padding-bottom: 4px; padding-inline: 16px 40px; height: 54px; width: 100%; max-width: 100%; font-size: var(--font-size-l); outline: none; &:focus-visible, &:focus { border-color: var(--secondary); border-width: 2px; } } textarea, input { &:focus-visible, &:focus { + label { font-size: var(--font-size-s); top: 8px; } } } `"
        },
        {
          "kind": "variable",
          "name": "labelStyle",
          "default": "css` label { position: absolute; top: 20px; font-size: var(--font-size-l); inset-inline-start: 16px; max-width: 100%; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; transition: all 240ms ease-out; color: var(--grey-7); } label.active { font-size: var(--font-size-s); top: 8px; } :host([inverse]) { label { color: var(--font-color-iverse); } } .asterisks { color: var(--grey-3); } `"
        },
        {
          "kind": "variable",
          "name": "formHintStyle",
          "default": "css` .hint { display: block; padding: 4px 0 0 8px; font-size: var(--font-size-s); color: var(--grey-3); } `"
        },
        {
          "kind": "variable",
          "name": "formErrorStyle",
          "default": "css` .err { display: block; padding: 4px 0 0 8px; color: var(--error); } :host([error]) { label { color: var(--error); } textarea, select, input { border-color: var(--error); } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "formStyle",
          "declaration": {
            "name": "formStyle",
            "module": "src/util/style/formStyle.ts"
          }
        },
        {
          "kind": "js",
          "name": "labelStyle",
          "declaration": {
            "name": "labelStyle",
            "module": "src/util/style/formStyle.ts"
          }
        },
        {
          "kind": "js",
          "name": "formHintStyle",
          "declaration": {
            "name": "formHintStyle",
            "module": "src/util/style/formStyle.ts"
          }
        },
        {
          "kind": "js",
          "name": "formErrorStyle",
          "declaration": {
            "name": "formErrorStyle",
            "module": "src/util/style/formStyle.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/style/resetStyle.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "resetStyle",
          "default": "css` div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video { margin: 0; padding: 0; border: 0; font-size: 100%; font: inherit; vertical-align: baseline; } ul, ol, li { padding: 0; margin: 0; list-style: none; } a { text-decoration: none; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "resetStyle",
          "declaration": {
            "name": "resetStyle",
            "module": "src/util/style/resetStyle.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/style/textStyle.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "textStyle",
          "default": "css` h1, h2, h4, h6 { font-weight: bold; } h5, h4 { font-size: var(--font-size-l); } h3, h2 { font-size: 22px; } h1 { font-size: 28px; } dl { dt, dd { margin-bottom: 4px; } dt { font-weight: bold; font-size: var(--font-size-s); } dd { font-size: var(--font-size); } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "textStyle",
          "declaration": {
            "name": "textStyle",
            "module": "src/util/style/textStyle.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/uid/index.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "uid"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "uid",
          "declaration": {
            "name": "uid",
            "module": "src/util/uid/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/string/capitalizeFirstLetter.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "capitalizeFirstLetter",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "str",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "capitalizeFirstLetter",
          "declaration": {
            "name": "capitalizeFirstLetter",
            "module": "src/util/string/capitalizeFirstLetter.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/render/renderAsterisks.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "renderAsterisks",
          "parameters": [
            {
              "name": "required",
              "type": {
                "text": "boolean"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "renderAsterisks",
          "declaration": {
            "name": "renderAsterisks",
            "module": "src/util/render/renderAsterisks.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/render/renderFormErrorMsg.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "renderFormErrorMsg",
          "parameters": [
            {
              "name": "msg",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "renderFormErrorMsg",
          "declaration": {
            "name": "renderFormErrorMsg",
            "module": "src/util/render/renderFormErrorMsg.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/render/renderFormInputHint.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "renderFormInputHint",
          "parameters": [
            {
              "name": "msg",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "renderFormInputHint",
          "declaration": {
            "name": "renderFormInputHint",
            "module": "src/util/render/renderFormInputHint.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/updateStorageProject/index.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "updateStorageProject",
          "parameters": [
            {
              "name": "id",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "obj",
              "type": {
                "text": "Partial<IProject>"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "updateStorageProject",
          "declaration": {
            "name": "updateStorageProject",
            "module": "src/util/updateStorageProject/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/windowEventHandler/index.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "windowEventHandler",
          "parameters": [
            {
              "name": "eventName",
              "type": {
                "text": "TEventName"
              }
            },
            {
              "name": "timeoutMs",
              "type": {
                "text": "number"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "resizeHandler"
        },
        {
          "kind": "variable",
          "name": "scrollHandler"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "windowEventHandler",
          "declaration": {
            "name": "windowEventHandler",
            "module": "src/util/windowEventHandler/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "resizeHandler",
          "declaration": {
            "name": "resizeHandler",
            "module": "src/util/windowEventHandler/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "scrollHandler",
          "declaration": {
            "name": "scrollHandler",
            "module": "src/util/windowEventHandler/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/constant.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "MODE_DEV",
          "type": {
            "text": "string"
          },
          "default": "'development'"
        },
        {
          "kind": "variable",
          "name": "MODE_PROD",
          "type": {
            "text": "string"
          },
          "default": "'production'"
        },
        {
          "kind": "variable",
          "name": "STORAGE_PROJECTS",
          "type": {
            "text": "string"
          },
          "default": "'wf-bm-projects'"
        },
        {
          "kind": "variable",
          "name": "STORAGE_MANIFEST_PREFIX",
          "type": {
            "text": "string"
          },
          "default": "'wf-bm-manifest-'"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MODE_DEV",
          "declaration": {
            "name": "MODE_DEV",
            "module": "out-tsc/chrome/src/constant.js"
          }
        },
        {
          "kind": "js",
          "name": "MODE_PROD",
          "declaration": {
            "name": "MODE_PROD",
            "module": "out-tsc/chrome/src/constant.js"
          }
        },
        {
          "kind": "js",
          "name": "STORAGE_PROJECTS",
          "declaration": {
            "name": "STORAGE_PROJECTS",
            "module": "out-tsc/chrome/src/constant.js"
          }
        },
        {
          "kind": "js",
          "name": "STORAGE_MANIFEST_PREFIX",
          "declaration": {
            "name": "STORAGE_MANIFEST_PREFIX",
            "module": "out-tsc/chrome/src/constant.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/index.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/interface.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/component/toast/util/toastFactory.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toastFactory"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toastFactory",
          "declaration": {
            "name": "toastFactory",
            "module": "src/component/toast/util/toastFactory.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/collapse/util/closeAllCollapses.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "closeAllCollapses",
          "parameters": [
            {
              "name": "collapses",
              "type": {
                "text": "NodeListOf<Component>"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "closeAllCollapses",
          "declaration": {
            "name": "closeAllCollapses",
            "module": "src/component/collapse/util/closeAllCollapses.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/collapse/util/openAllCollapses.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "openAllCollapses",
          "parameters": [
            {
              "name": "collapses",
              "type": {
                "text": "NodeListOf<Component>"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "openAllCollapses",
          "declaration": {
            "name": "openAllCollapses",
            "module": "src/component/collapse/util/openAllCollapses.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/collapse/util/openOnlyOneCollapse.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "openOnlyOneCollapse",
          "parameters": [
            {
              "name": "collapses",
              "type": {
                "text": "NodeListOf<Component>"
              }
            },
            {
              "name": "openId"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "openOnlyOneCollapse",
          "declaration": {
            "name": "openOnlyOneCollapse",
            "module": "src/component/collapse/util/openOnlyOneCollapse.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/component/collapse/util/resizeCollapses.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "resizeCollapses",
          "parameters": [
            {
              "name": "collapses",
              "type": {
                "text": "NodeListOf<Component>"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "resizeCollapses",
          "declaration": {
            "name": "resizeCollapses",
            "module": "src/component/collapse/util/resizeCollapses.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/formController/validators/max.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "max",
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "item",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "args",
              "type": {
                "text": "any"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "max",
          "declaration": {
            "name": "max",
            "module": "src/util/formController/validators/max.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/formController/validators/maxLength.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "maxLength",
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "item",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "args",
              "type": {
                "text": "any"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "maxLength",
          "declaration": {
            "name": "maxLength",
            "module": "src/util/formController/validators/maxLength.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/formController/validators/min.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "min",
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "item",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "args",
              "type": {
                "text": "any"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "min",
          "declaration": {
            "name": "min",
            "module": "src/util/formController/validators/min.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/formController/validators/minLength.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "minLength",
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "item",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "args",
              "type": {
                "text": "any"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "minLength",
          "declaration": {
            "name": "minLength",
            "module": "src/util/formController/validators/minLength.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/formController/validators/regex.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "regex",
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "item",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "regex",
              "type": {
                "text": "RegExp"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "regex",
          "declaration": {
            "name": "regex",
            "module": "src/util/formController/validators/regex.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/formController/validators/required.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "required",
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "args",
              "type": {
                "text": "any"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "required",
          "declaration": {
            "name": "required",
            "module": "src/util/formController/validators/required.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/util/formController/validators/secure.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "secure",
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "args",
              "type": {
                "text": "any"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "secure",
          "declaration": {
            "name": "secure",
            "module": "src/util/formController/validators/secure.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/views/mocks/component/project/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "field",
              "name": "project",
              "type": {
                "text": "IProject"
              }
            },
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[defaultStyle, textStyle, style]"
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "projectTask",
              "type": {
                "text": "Task<[IProject]>"
              },
              "default": "new Task(this, { task: async ([id]) => { const [manifest, allActiveMocks] = await Promise.all([ getStorageItem(STORAGE_MANIFEST_PREFIX + id), getStorageItem(STORAGE_ACTIVE_REQUESTS) ]); return [manifest, allActiveMocks[id] || {}] }, args: () => [this.project.id], })"
            },
            {
              "kind": "field",
              "name": "handleCancel"
            },
            {
              "kind": "field",
              "name": "handleToggleAll"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Component",
          "declaration": {
            "name": "Component",
            "module": "src/views/mocks/component/project/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-mock-project",
          "declaration": {
            "name": "Component",
            "module": "src/views/mocks/component/project/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/views/mocks/component/project/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` header { margin-bottom: 16px; display: flex; justify-content: left; gap: 16px; align-items: center; wf-switch { margin-left: auto; } .back svg { fill: var(--primary); } } dl { margin-bottom: 32px; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "src/views/mocks/component/project/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/views/mocks/component/projects/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "field",
              "name": "projects",
              "type": {
                "text": "IProjects"
              }
            },
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[defaultStyle, textStyle, style]"
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "renderProject"
            },
            {
              "kind": "field",
              "name": "projectsTask",
              "type": {
                "text": "Task<[any]>"
              },
              "default": "new Task(this, { task: async () => { return await getStorageItem(STORAGE_PROJECTS) || {}; }, args: () => [], })"
            },
            {
              "kind": "field",
              "name": "toggleProject"
            },
            {
              "kind": "field",
              "name": "openProject"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Component",
          "declaration": {
            "name": "Component",
            "module": "src/views/mocks/component/projects/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-mock-projects",
          "declaration": {
            "name": "Component",
            "module": "src/views/mocks/component/projects/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/views/mocks/component/projects/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` li { display: flex; align-items: center; border: 1px solid var(--grey-5); border-radius: var(--border-radius); margin-bottom: 8px; overflow: hidden; &:last-child { margin-bottom: 0; } span { margin-right: auto; } } .cta { cursor: pointer; display: flex; flex: 1 0 1%; justify-content: space-between; align-items: center; padding: 16px; border-radius: var(--border-radius) 0 0 var(--border-radius); background-color: var(--main-bg); transition: background-color 260ms ease-out; &:hover, &:focus, &:focus-visible { background-color: var(--primary-inverse); } } wf-switch { padding: 16px; } wf-button { border-radius: 50%; width: 32px; height: 32px; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "src/views/mocks/component/projects/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/views/projects/component/form/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "isUpdate",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "values",
              "type": {
                "text": "Partial<IFormValues>"
              },
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "showForm",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "inputFields",
              "type": {
                "text": "NodeListOf<HTMLElement>"
              }
            },
            {
              "kind": "field",
              "name": "form",
              "type": {
                "text": "FormController<Component, IFormValues>"
              },
              "default": "new FormController(this)"
            },
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[defaultStyle, buttonsWrapperStyles, style]"
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "handleCancel"
            },
            {
              "kind": "field",
              "name": "handleDelete"
            },
            {
              "kind": "field",
              "name": "handleFormSubmit"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Component",
          "declaration": {
            "name": "Component",
            "module": "src/views/projects/component/form/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-projects-form",
          "declaration": {
            "name": "Component",
            "module": "src/views/projects/component/form/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/views/projects/component/form/interface.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/views/projects/component/form/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` :host * { margin-bottom: 16px; } wf-button { margin-bottom: 0; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "src/views/projects/component/form/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/layout/constant.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TAB_PROJECTS",
          "type": {
            "text": "string"
          },
          "default": "'projects'"
        },
        {
          "kind": "variable",
          "name": "TAB_API_MOCKS",
          "type": {
            "text": "string"
          },
          "default": "'mocks'"
        },
        {
          "kind": "variable",
          "name": "TABS",
          "type": {
            "text": "array"
          },
          "default": "[ TAB_API_MOCKS, TAB_PROJECTS, ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TAB_PROJECTS",
          "declaration": {
            "name": "TAB_PROJECTS",
            "module": "out-tsc/chrome/src/layout/constant.js"
          }
        },
        {
          "kind": "js",
          "name": "TAB_API_MOCKS",
          "declaration": {
            "name": "TAB_API_MOCKS",
            "module": "out-tsc/chrome/src/layout/constant.js"
          }
        },
        {
          "kind": "js",
          "name": "TABS",
          "declaration": {
            "name": "TABS",
            "module": "out-tsc/chrome/src/layout/constant.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/layout/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BrowserMock",
          "members": [
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "bmIsActive",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "currentView",
              "default": "TAB_PROJECTS"
            },
            {
              "kind": "field",
              "name": "viewsMap",
              "type": {
                "text": "object"
              },
              "default": "{ [TAB_PROJECTS]: async () => { await import(\"../views/projects\"); return html ` <wf-view-projects></wf-view-projects>`; }, [TAB_API_MOCKS]: async () => { await import(\"../views/mocks\"); return html ` <wf-view-config></wf-view-config>`; }, }"
            },
            {
              "kind": "field",
              "name": "viewLoadTask",
              "default": "new Task(this, { task: async ([currentView]) => this.viewsMap[currentView](), args: () => [this.currentView], })"
            },
            {
              "kind": "field",
              "name": "renderTabLink"
            },
            {
              "kind": "field",
              "name": "renderButtons"
            },
            {
              "kind": "field",
              "name": "handleToggleBm"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-bm-popup",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BrowserMock",
          "declaration": {
            "name": "BrowserMock",
            "module": "out-tsc/chrome/src/layout/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-bm-popup",
          "declaration": {
            "name": "BrowserMock",
            "module": "out-tsc/chrome/src/layout/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/layout/interface.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/layout/style.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css ` :host { display: block; background-color: var(--main-bg); } nav { display: flex; flex-wrap: wrap; background-color: var(--primary); font-size: var(--font-size-l); font-weight: bold; a { position: relative; padding: 16px 24px 14px; color: var(--font-color-iverse); background-color: var(--primary); transition: background-color 400ms ease-in-out; &:after { content: ''; display: block; width: 0; height: 4px; position: absolute; bottom: 0; left: 50%; transform: translateX(-50%); opacity: 0; background-color: var(--font-color-iverse); transition: all 400ms ease-in-out; } &.active { background-color: var(--primary-bright); } &:hover { &:after { opacity: 1; width: 100%; } } } wf-switch { padding: 10px 16px 0 0; margin-left: auto; } } .tabs { padding: 16px 8px; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "out-tsc/chrome/src/layout/style.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/views/projects/component/list/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "field",
              "name": "projects",
              "type": {
                "text": "IProjects"
              }
            },
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[defaultStyle, buttonsWrapperStyles, style]"
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "renderProject"
            },
            {
              "kind": "field",
              "name": "projectsTask",
              "type": {
                "text": "Task<[any]>"
              },
              "default": "new Task(this, { task: async () => { return await getStorageItem(STORAGE_PROJECTS) || {}; }, args: () => [], })"
            },
            {
              "kind": "field",
              "name": "editProject"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Component",
          "declaration": {
            "name": "Component",
            "module": "src/views/projects/component/list/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-projects-list",
          "declaration": {
            "name": "Component",
            "module": "src/views/projects/component/list/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/views/projects/component/list/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` li { display: flex; justify-content: space-between; align-items: center; padding: 16px; border: 1px solid var(--grey-5); border-radius: var(--border-radius); margin-bottom: 8px; cursor: pointer; background-color: var(--main-bg); transition: background-color 260ms ease-out; &:last-child { margin-bottom: 0; } &:hover, &:focus, &:focus-visible { background-color: var(--primary-inverse); } } wf-button { border-radius: 50%; width: 32px; height: 32px; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "src/views/projects/component/list/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/button/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "string"
              },
              "default": "'primary'"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'button'"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "string"
              },
              "default": "'m'"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "string"
              },
              "default": "'_self'"
            },
            {
              "kind": "field",
              "name": "renderButton"
            },
            {
              "kind": "field",
              "name": "renderLink"
            },
            {
              "kind": "field",
              "name": "handleClick"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/button/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-button",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/button/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/button/interface.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/button/style.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css ` :host { display: inline-flex; align-items: center; justify-content: center; } :host(:focus-visible) { outline: 0; } :host([disabled]) { .cta { opacity: .6; cursor: not-allowed; pointer-events: none; } } .cta { border: 2px solid transparent; cursor: pointer; border-radius: 999em; transition: all 300ms ease-in-out; background-color: transparent; } ::slotted(svg) { width: 24px; height: 24px; fill: var(--grey-0); transition: fill 300ms ease-in-out; } .xs, .s { font-size: var(--font-size-s); ::slotted(svg) { width: 18px; height: 18px; } } .xs { padding: 2px 8px; } .s { padding: 4px 12px; } .m { padding: 8px 16px; } .l, .xl { font-size: var(--font-size-l); ::slotted(svg) { width: 32px; height: 32px; } } .l { padding: 12px 24px; } .xl { padding: 16px 36px; } .inherit { padding: inherit; font-size: inherit; width: inherit; height: inherit; border-radius: inherit; } .primary, .secondary, .tertiary { color: var(--grey-0); } .clean { background-color: rgba(0,0,0, 0); border-color: rgba(0,0,0, 0); &:hover, &:focus, &:focus-visible { background-color: var(--primary-inverse); } ::slotted(svg) { fill: var(--grey-7); } } .primary { background-color: var(--primary); border-color: var(--primary); &:hover, &:focus, &:focus-visible { background-color: var(--primary-dark); border-color: var(--primary-dark); } } .secondary { background-color: var(--secondary); border-color: var(--secondary); &:hover, &:focus, &:focus-visible { background-color: var(--secondary-dark); border-color: var(--secondary-dark); } } .tertiary { background-color: var(--tertiary); border-color: var(--tertiary); &:hover, &:focus, &:focus-visible { background-color: var(--tertiary-dark); border-color: var(--tertiary-dark); } } .primary-outline, .primary-clean { color: var(--primary); ::slotted(svg) { fill: var(--primary); } &:hover, &:focus, &:focus-visible { color: var(--primary-dark); ::slotted(svg) { fill: var(--primary-dark); } } } .primary-outline { border-color: var(--primary); &:hover, &:focus, &:focus-visible { border-color: var(--primary-dark); } } .secondary-outline, .secondary-clean { color: var(--secondary); ::slotted(svg) { fill: var(--secondary); } &:hover, &:focus, &:focus-visible { color: var(--secondary-dark); ::slotted(svg) { fill: var(--secondary-dark); } } } .secondary-outline { border-color: var(--secondary); &:hover, &:focus, &:focus-visible { border-color: var(--secondary-dark); } } .tertiary-outline, .tertiary-clean { color: var(--tertiary); ::slotted(svg) { fill: var(--tertiary); } &:hover, &:focus, &:focus-visible { color: var(--tertiary-dark); ::slotted(svg) { fill: var(--tertiary-dark); } } } .tertiary-outline { border-color: var(--tertiary); &:hover, &:focus, &:focus-visible { border-color: var(--tertiary-dark); } } `"
        },
        {
          "kind": "variable",
          "name": "buttonsWrapperStyles",
          "default": "css ` .buttons { display: flex; gap: 16px; &.right { justify-content: right; } &.center { justify-content: center; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "out-tsc/chrome/src/component/button/style.js"
          }
        },
        {
          "kind": "js",
          "name": "buttonsWrapperStyles",
          "declaration": {
            "name": "buttonsWrapperStyles",
            "module": "out-tsc/chrome/src/component/button/style.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/collapse/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "method",
              "name": "firstUpdated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ]
            },
            {
              "kind": "field",
              "name": "isOpen",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "handleChange"
            },
            {
              "kind": "field",
              "name": "handleWindowResize"
            },
            {
              "kind": "field",
              "name": "getMaxHeight"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/collapse/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-collapse",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/collapse/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/collapse/style.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css ` :host { position: relative; } input { position: absolute; opacity: 0; appearance: none; margin: 0; &:focus-visible, &:focus { outline: none; + label { border-color: var(--secondary); } } &:checked + label { &:after { width: 100%; opacity: 1; } svg { transform: translateY(-50%) rotate(-90deg); } } } label { display: block; width: 100%; font-size: var(--font-size-l); padding: 20px 0 16px; padding-inline: 16px 40px; cursor: pointer; position: relative; border: 1px solid var(--grey-5); border-radius: 8px 8px 0 0; &:after { content: ''; display: block; width: 0; height: 1px; //background-color: var(--grey-5); position: absolute; top: 100%; left: 50%; opacity: 0; transform: translateX(-50%); transition: width 600ms ease-in-out, opacity 200ms ease-in; } } svg { width: 36px; height: 36px; fill: var(--grey-7); position: absolute; right: 12px; top: 50%; transition: transform 260ms ease-in-out; transform: translateY(-50%) rotate(90deg); filter: drop-shadow(1px 2px 2px rgba(0, 0, 0, .2 )); } #cnt { max-height: 0; overflow: hidden; transition: max-height ease-in-out 600ms; border: 1px solid var(--grey-5); border-top: 0; border-radius: 0 0 8px 8px; } #wrp { padding: var(--collapse-padding); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "out-tsc/chrome/src/component/collapse/style.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/file/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "input",
              "default": "new FormFieldController(this)"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'text'"
            },
            {
              "kind": "field",
              "name": "accept",
              "type": {
                "text": "string"
              },
              "default": "'.json'"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "multiple",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "renderFileListItems"
            },
            {
              "kind": "field",
              "name": "handleInput"
            },
            {
              "kind": "field",
              "name": "handleBtnClick"
            },
            {
              "kind": "field",
              "name": "handleItemClick"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/file/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-file",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/file/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/file/style.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css ` :host { position: relative; } input { position: absolute; overflow: hidden; padding: 0; border: 0; margin: -1px; block-size: 1px; clip: rect(0px, 0px, 0px, 0px); inline-size: 1px; visibility: inherit; white-space: nowrap; } .input { font-family: var(--font-family), sans-serif; color: var(--font-color); border-radius: var(--border-radius); border: 1px solid var(--grey-5); padding-top: 20px; padding-bottom: 4px; padding-inline: 16px 60px; min-height: 54px; width: 100%; max-width: 100%; font-size: var(--font-size-l); outline: none; } li { padding: 4px 0; cursor: pointer; display: flex; gap: 8px; align-items: center; svg { width: 16px; height: 16px; fill: var(--secondary); } } wf-button { position: absolute; top: 1px; right: 1px; height: 52px; width: 52px; border-radius: 0 var(--border-radius) var(--border-radius) 0; &:focus-visible, &:focus { + .input { border-color: var(--secondary); border-width: 2px; } } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "out-tsc/chrome/src/component/file/style.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/option-picker/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "method",
              "name": "renderOption",
              "parameters": [
                {
                  "name": "item"
                },
                {
                  "name": "index"
                }
              ]
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "handleChange"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/option-picker/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-option-picker",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/option-picker/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/option-picker/style.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css ` :host { display: flex; gap: 16px 32px; flex-wrap: nowrap; } input { opacity: 0; appearance: none; margin: 0; &:focus-visible { outline: none; } } h5 { font-weight: bold; font-size: var(--font-size-l); } label { position: relative; cursor: pointer; display: inline-flex; align-items: center; top: unset; transform: unset; inset-inline-start: unset; border-radius: var(--border-radius); border: 1px solid; padding: 8px 0 8px 16px; background-color: var(--main-bg); transition: color 200ms ease-out, background-color 200ms ease-out; span { position: relative; display: inline-block; width: 0; padding-left: 16px; overflow: hidden; transition: opacity 200ms ease-out, width 360ms ease-out; } } svg { width: 24px; filter: drop-shadow(1px 2px 2px rgba(0, 0, 0, .2 )); fill: var(--font-color-iverse); } input:checked + label { color: var(--font-color-iverse); span { opacity: 1; width: 56px; } } .success { label { border-color: var(--success); color: var(--success); } input:checked + label { background-color: var(--success-bg); } } .error { label { border-color: var(--error); color: var(--error); } input:checked + label { background-color: var(--error-bg); } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "out-tsc/chrome/src/component/option-picker/style.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/options/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "method",
              "name": "renderOption",
              "parameters": [
                {
                  "name": "item"
                },
                {
                  "name": "index"
                }
              ]
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "renderFields"
            },
            {
              "kind": "field",
              "name": "changeHandlerMap",
              "type": {
                "text": "object"
              },
              "default": "{ radio: (value) => { if (value !== this.value) { this.value = value; } }, checkbox: (value) => { const index = this.value.indexOf(value); if (index === -1) { this.value.push(value); } else { this.value.splice(index, 1); } } }"
            },
            {
              "kind": "field",
              "name": "handleChange"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/options/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-options",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/options/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/options/style.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css ` label { position: unset; display: block; top: unset; transform: unset; inset-inline-start: unset; margin-bottom: 16px; } .options { display: flex; gap: 16px 32px; flex-wrap: nowrap; label { cursor: pointer; display: inline-flex; align-items: center; overflow: visible; margin-bottom: 0; span { position: relative; display: inline-block; width: 20px; height: 20px; border-radius: 50%; margin-right: 8px; border: 1px solid var(--grey-5); transition: opacity 200ms ease-out; margin-top: -2px; &:before { content: ''; display: inline-block; width: 12px; height: 12px; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); border-radius: 50%; opacity: .2; background-color: var(--grey-5); transition: opacity 200ms ease-out; } } } } input { opacity: 0; appearance: none; margin: 0; &:focus-visible { outline: none; + label span { box-shadow: 0 0 1px 2px var(--secondary); } } } input[type=\"checkbox\"] + label span { border-radius: 6px; &:before { border-radius: 4px; } } input:checked + label span { border-color: var(--primary) !important; border-width: 2px; &:before { opacity: 1; background-color: var(--primary); } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "out-tsc/chrome/src/component/options/style.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/input/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'text'"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "input",
              "default": "new FormFieldController(this)"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/input/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-input",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/input/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/input/style.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css ` `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "out-tsc/chrome/src/component/input/style.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/progress/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/progress/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-progress",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/progress/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/progress/style.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css ` :host { display: none; } :host([visible]) { display: block; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); width: 60px; aspect-ratio: 1; &:before, &:after { content: \"\"; position: absolute; border-radius: 99em; animation: progressAni 2.5s infinite; background: var(--grey-1); border: 4px solid; box-shadow: var(--box-shadow); } &:before { border-color: var(--primary); } &:after { border-color: var(--secondary); animation-delay: -1.25s; } } @keyframes progressAni { 0% { inset: 0 34px 34px 0; } 12.5% { inset: 0 34px 0 0; } 25% { inset: 34px 34px 0 0; } 37.5% { inset: 34px 0 0 0; } 50% { inset: 34px 0 0 34px; } 62.5% { inset: 0 0 0 34px; } 75% { inset: 0 0 34px 34px; } 87.5% { inset: 0 0 34px 0; } 100% { inset: 0 34px 34px 0; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "out-tsc/chrome/src/component/progress/style.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/select/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "renderSelectOptions"
            },
            {
              "kind": "field",
              "name": "handleChange"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/select/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-select",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/select/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/select/style.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css ` select { appearance: none; cursor: pointer; overflow: hidden; text-overflow: ellipsis; } .hide { color: transparent; } svg { position: absolute; top: 50%; right: 16px; transform: translateY(-50%); fill: var(--grey-7); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "out-tsc/chrome/src/component/select/style.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/views/error/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ErrorAsync",
          "members": [
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "string"
              },
              "default": "''"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-error",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ErrorAsync",
          "declaration": {
            "name": "ErrorAsync",
            "module": "out-tsc/chrome/src/views/error/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-error",
          "declaration": {
            "name": "ErrorAsync",
            "module": "out-tsc/chrome/src/views/error/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/switch/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "true"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "handleChange"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/switch/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-switch",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/switch/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/switch/style.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css ` input { position: absolute; opacity: 0; appearance: none; margin: 0; &:focus-visible { outline: none; + label { box-shadow: 0 0 1px 2px var(--secondary); } } &:checked + label span { &:before { background: var(--primary); } &:after { background: var(--primary); left: 25px; } } } label { position: relative; cursor: pointer; display: flex; align-items: center; top: unset; transform: unset; inset-inline-start: unset; overflow: visible; } span { position: relative; display: inline-block; padding: 8px 4px; margin-right: 8px; &:before, &:after { content: ''; display: block; transition: all 300ms ease-out; } &:before { width: 40px; height: 12px; border-radius: 999em; background: var(--grey-7); opacity: .4; } &:after { position: absolute; top: 50%; transform: translateY(-50%); left: 0; width: 24px; height: 24px; border-radius: 50%; background: var(--grey-7); box-shadow: var(--box-shadow); } } :host([inverse]) { input { &:checked + label span { &:before { background: var(--primary-inverse); } &:after { background: var(--primary-inverse); } } } span { &:before { background: var(--grey-3); } &:after { background: var(--grey-5); } } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "out-tsc/chrome/src/component/switch/style.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/textarea/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "'text'"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "input",
              "default": "new FormFieldController(this)"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/textarea/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-textarea",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/textarea/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/textarea/style.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css ` textarea { height: 162px; min-width: 100%; padding-top: 28px; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "out-tsc/chrome/src/component/textarea/style.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/toast/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "toastHandler"
            },
            {
              "kind": "field",
              "name": "appearance",
              "type": {
                "text": "string"
              },
              "default": "'success'"
            },
            {
              "kind": "field",
              "name": "renderIcon"
            },
            {
              "kind": "field",
              "name": "handleCloseClick"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/toast/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-toast",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/component/toast/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/toast/interface.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/toast/style.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css ` :host { padding: 16px; display: grid; grid-template-columns: 40px auto 40px; align-items: center; max-width: 50vw; min-width: 25vw; margin-left: 0; border-left: 4px solid var(--grey-5); background-color: var(--grey-0); box-shadow: var(--box-shadow); margin-bottom: 12px; transition: all 500ms ease-out; &:last-child { margin-bottom: 0; } } :host(.fade-out) { margin-left: -100vw; opacity: 0; } svg { fill: var(--grey-5); width: 24px; filter: drop-shadow(1px 2px 2px rgba(0, 0, 0, .2 )); } :host([appearance=\"success\"]) { background-color: var(--success-bg); border-color: var(--success); color: var(--grey-0); svg { fill: var(--grey-0); } > svg { fill: var(--success); } } :host([appearance=\"error\"]) { background-color: var(--error-bg); border-color: var(--error); color: var(--grey-0); svg { fill: var(--grey-0); } > svg { fill: var(--error); } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "out-tsc/chrome/src/component/toast/style.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/views/projects/constant.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "VIEW_LIST",
          "type": {
            "text": "string"
          },
          "default": "'list'"
        },
        {
          "kind": "variable",
          "name": "VIEW_NEW",
          "type": {
            "text": "string"
          },
          "default": "'new'"
        },
        {
          "kind": "variable",
          "name": "VIEW_EDIT",
          "type": {
            "text": "string"
          },
          "default": "'edit'"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VIEW_LIST",
          "declaration": {
            "name": "VIEW_LIST",
            "module": "out-tsc/chrome/src/views/projects/constant.js"
          }
        },
        {
          "kind": "js",
          "name": "VIEW_NEW",
          "declaration": {
            "name": "VIEW_NEW",
            "module": "out-tsc/chrome/src/views/projects/constant.js"
          }
        },
        {
          "kind": "js",
          "name": "VIEW_EDIT",
          "declaration": {
            "name": "VIEW_EDIT",
            "module": "out-tsc/chrome/src/views/projects/constant.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/views/projects/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "view",
              "default": "VIEW_LIST"
            },
            {
              "kind": "field",
              "name": "toast"
            },
            {
              "kind": "field",
              "name": "editProject"
            },
            {
              "kind": "field",
              "name": "handleFormSubmit"
            },
            {
              "kind": "field",
              "name": "handleDeleteProject"
            },
            {
              "kind": "field",
              "name": "addNewProject"
            },
            {
              "kind": "field",
              "name": "handleCancel"
            },
            {
              "kind": "field",
              "name": "views",
              "type": {
                "text": "object"
              },
              "default": "{ [VIEW_NEW]: () => { import(\"./component/project-form\"); return html ` <wf-project-form @onSubmit=\"${this.handleFormSubmit}\" ></wf-project-form>`; }, [VIEW_EDIT]: () => { import(\"./component/project-form\"); return html ` <wf-project-form @onSubmit=\"${this.handleFormSubmit}\" @onCancel=\"${this.handleCancel}\" @onDelete=\"${this.handleDeleteProject}\" values=\"${ifDefined(this.selectedProject)}\" isUpdate ></wf-project-form>`; }, [VIEW_LIST]: () => { import(\"./component/project-list\"); return html ` <wf-project-list @onEdit=\"${this.editProject}\"></wf-project-list>`; } }"
            },
            {
              "kind": "field",
              "name": "setView"
            },
            {
              "kind": "field",
              "name": "viewTask",
              "default": "new Task(this, { task: async ([view]) => { if (this.views[view]) { return this.views[this.view](); } return html ` <wf-error></wf-error>`; }, args: () => [this.view], })"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Component",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/views/projects/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-view-projects",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/views/projects/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/views/projects/interface.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/views/projects/style.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css ` header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; } wf-button { margin-bottom: 16px; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "out-tsc/chrome/src/views/projects/style.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/views/mocks/constant.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "VIEW_PROJECTS",
          "type": {
            "text": "string"
          },
          "default": "'projects'"
        },
        {
          "kind": "variable",
          "name": "VIEW_PROJECT",
          "type": {
            "text": "string"
          },
          "default": "'project'"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "VIEW_PROJECTS",
          "declaration": {
            "name": "VIEW_PROJECTS",
            "module": "out-tsc/chrome/src/views/mocks/constant.js"
          }
        },
        {
          "kind": "js",
          "name": "VIEW_PROJECT",
          "declaration": {
            "name": "VIEW_PROJECT",
            "module": "out-tsc/chrome/src/views/mocks/constant.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/views/mocks/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "view",
              "default": "VIEW_PROJECTS"
            },
            {
              "kind": "field",
              "name": "views",
              "type": {
                "text": "object"
              },
              "default": "{ [VIEW_PROJECTS]: () => { import(\"./component/projects\"); return html ` <wf-view-projects></wf-view-projects>`; }, [VIEW_PROJECT]: () => { import(\"./component/project\"); return html ` <wf-view-project></wf-view-project>`; } }"
            },
            {
              "kind": "field",
              "name": "viewTask",
              "default": "new Task(this, { task: async ([view]) => { if (this.views[view]) { return this.views[this.view](); } return html ` <wf-error></wf-error>`; }, args: () => [this.view], })"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Component",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/views/mocks/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-view-config",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/views/mocks/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/views/mocks/interface.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/views/mocks/style.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css ` :host * { margin-bottom: 16px; } ep-collapse { margin-bottom: 8px; } :host *, ep-collapse { &:last-child { margin-bottom: 0; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "out-tsc/chrome/src/views/mocks/style.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/formController/constant.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "inputFieldTypes",
          "type": {
            "text": "array"
          },
          "default": "[ 'wf-input', 'wf-switch', 'wf-select', 'wf-textarea', 'wf-options', 'wf-file', ]"
        },
        {
          "kind": "variable",
          "name": "inputFieldTypesChangeOnly",
          "type": {
            "text": "array"
          },
          "default": "[ 'wf-switch', 'wf-textarea', 'wf-options', ]"
        },
        {
          "kind": "variable",
          "name": "errorMessages",
          "type": {
            "text": "object"
          },
          "default": "{ required: 'This field is required', minLength: 'This field must be at least {min-length} characters long', maxLength: 'This field must be at most {max-length} characters long', min: 'This field must be at least {min}', max: 'This field must be at most {max}', regex: 'This field does not match the required pattern', secure: 'This field is not valid', }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "inputFieldTypes",
          "declaration": {
            "name": "inputFieldTypes",
            "module": "out-tsc/chrome/src/util/formController/constant.js"
          }
        },
        {
          "kind": "js",
          "name": "inputFieldTypesChangeOnly",
          "declaration": {
            "name": "inputFieldTypesChangeOnly",
            "module": "out-tsc/chrome/src/util/formController/constant.js"
          }
        },
        {
          "kind": "js",
          "name": "errorMessages",
          "declaration": {
            "name": "errorMessages",
            "module": "out-tsc/chrome/src/util/formController/constant.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/formController/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FormController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "method",
              "name": "hostDisconnected"
            },
            {
              "kind": "field",
              "name": "checks",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "values",
              "type": {
                "text": "object"
              },
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "invalidFields",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_isValide",
              "type": {
                "text": "boolean"
              },
              "default": "!this.invalidFields.length"
            },
            {
              "kind": "field",
              "name": "validateFormField"
            },
            {
              "kind": "field",
              "name": "handleInput"
            },
            {
              "kind": "field",
              "name": "handleChange"
            },
            {
              "kind": "field",
              "name": "handleBlur"
            },
            {
              "kind": "field",
              "name": "addEventListeners"
            },
            {
              "kind": "field",
              "name": "removeEventListeners"
            },
            {
              "kind": "field",
              "name": "toggleEventListeners"
            },
            {
              "kind": "field",
              "name": "setInitialChecks"
            },
            {
              "kind": "field",
              "name": "defaultCheckMap",
              "type": {
                "text": "object"
              },
              "default": "{ required: required, min: min, max: max, minLength: minLength, maxLength: maxLength, }"
            },
            {
              "kind": "field",
              "name": "addCheckToArray"
            },
            {
              "kind": "field",
              "name": "getDefaultValidationAttributes"
            },
            {
              "kind": "field",
              "name": "isValide"
            },
            {
              "kind": "field",
              "name": "validate"
            },
            {
              "kind": "field",
              "name": "getValues"
            },
            {
              "kind": "field",
              "name": "setValue"
            },
            {
              "kind": "field",
              "name": "setInitialValues"
            },
            {
              "kind": "field",
              "name": "host",
              "default": "host"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormController",
          "declaration": {
            "name": "FormController",
            "module": "out-tsc/chrome/src/util/formController/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/formController/interface.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/formField/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FormFieldController",
          "members": [
            {
              "kind": "field",
              "name": "handleInput"
            },
            {
              "kind": "field",
              "name": "handleUpdate"
            },
            {
              "kind": "field",
              "name": "host",
              "default": "host"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FormFieldController",
          "declaration": {
            "name": "FormFieldController",
            "module": "out-tsc/chrome/src/util/formField/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/storage/index.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getStorageItem",
          "parameters": [
            {
              "name": "key"
            }
          ]
        },
        {
          "kind": "function",
          "name": "setStorageItem",
          "parameters": [
            {
              "name": "key"
            },
            {
              "name": "obj"
            }
          ]
        },
        {
          "kind": "function",
          "name": "mergeStorageItem",
          "parameters": [
            {
              "name": "key"
            },
            {
              "name": "obj"
            }
          ]
        },
        {
          "kind": "function",
          "name": "removeStorageItem",
          "parameters": [
            {
              "name": "key"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getStorageItem",
          "declaration": {
            "name": "getStorageItem",
            "module": "out-tsc/chrome/src/util/storage/index.js"
          }
        },
        {
          "kind": "js",
          "name": "setStorageItem",
          "declaration": {
            "name": "setStorageItem",
            "module": "out-tsc/chrome/src/util/storage/index.js"
          }
        },
        {
          "kind": "js",
          "name": "mergeStorageItem",
          "declaration": {
            "name": "mergeStorageItem",
            "module": "out-tsc/chrome/src/util/storage/index.js"
          }
        },
        {
          "kind": "js",
          "name": "removeStorageItem",
          "declaration": {
            "name": "removeStorageItem",
            "module": "out-tsc/chrome/src/util/storage/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/nodeListHelper/index.js",
      "declarations": [
        {
          "kind": "function",
          "name": "filter",
          "parameters": [
            {
              "name": "list"
            },
            {
              "name": "predicate"
            },
            {
              "name": "args"
            }
          ]
        },
        {
          "kind": "function",
          "name": "find",
          "parameters": [
            {
              "name": "list"
            },
            {
              "name": "predicate"
            },
            {
              "name": "args"
            }
          ]
        },
        {
          "kind": "function",
          "name": "forEach",
          "parameters": [
            {
              "name": "list"
            },
            {
              "name": "predicate"
            },
            {
              "name": "args"
            }
          ]
        },
        {
          "kind": "function",
          "name": "map",
          "parameters": [
            {
              "name": "list"
            },
            {
              "name": "predicate"
            },
            {
              "name": "args"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "filter",
          "declaration": {
            "name": "filter",
            "module": "out-tsc/chrome/src/util/nodeListHelper/index.js"
          }
        },
        {
          "kind": "js",
          "name": "find",
          "declaration": {
            "name": "find",
            "module": "out-tsc/chrome/src/util/nodeListHelper/index.js"
          }
        },
        {
          "kind": "js",
          "name": "forEach",
          "declaration": {
            "name": "forEach",
            "module": "out-tsc/chrome/src/util/nodeListHelper/index.js"
          }
        },
        {
          "kind": "js",
          "name": "map",
          "declaration": {
            "name": "map",
            "module": "out-tsc/chrome/src/util/nodeListHelper/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/jsonFileContent/index.js",
      "declarations": [
        {
          "kind": "function",
          "name": "jsonFileContent",
          "parameters": [
            {
              "name": "file"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "jsonFileContent",
          "declaration": {
            "name": "jsonFileContent",
            "module": "out-tsc/chrome/src/util/jsonFileContent/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/render/renderAsterisks.js",
      "declarations": [
        {
          "kind": "function",
          "name": "renderAsterisks",
          "parameters": [
            {
              "name": "required"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "renderAsterisks",
          "declaration": {
            "name": "renderAsterisks",
            "module": "out-tsc/chrome/src/util/render/renderAsterisks.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/render/renderFormErrorMsg.js",
      "declarations": [
        {
          "kind": "function",
          "name": "renderFormErrorMsg",
          "parameters": [
            {
              "name": "msg"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "renderFormErrorMsg",
          "declaration": {
            "name": "renderFormErrorMsg",
            "module": "out-tsc/chrome/src/util/render/renderFormErrorMsg.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/render/renderFormInputHint.js",
      "declarations": [
        {
          "kind": "function",
          "name": "renderFormInputHint",
          "parameters": [
            {
              "name": "msg"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "renderFormInputHint",
          "declaration": {
            "name": "renderFormInputHint",
            "module": "out-tsc/chrome/src/util/render/renderFormInputHint.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/string/capitalizeFirstLetter.js",
      "declarations": [
        {
          "kind": "function",
          "name": "capitalizeFirstLetter",
          "parameters": [
            {
              "name": "str"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "capitalizeFirstLetter",
          "declaration": {
            "name": "capitalizeFirstLetter",
            "module": "out-tsc/chrome/src/util/string/capitalizeFirstLetter.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/uid/index.js",
      "declarations": [
        {
          "kind": "function",
          "name": "uid"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "uid",
          "declaration": {
            "name": "uid",
            "module": "out-tsc/chrome/src/util/uid/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/style/defaultStyle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "defaultStyle",
          "default": "css ` :host { display: block; font-family: var(--font-family), sans-serif; font-size: var(--font-size); color: var(--font-color); } :host, *, *:before, *:after { box-sizing: border-box; } a { text-decoration: none; } div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video { margin: 0; padding: 0; border: 0; font-size: 100%; font: inherit; vertical-align: baseline; } ul, ol, li { padding: 0; margin: 0; list-style: none; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "defaultStyle",
          "declaration": {
            "name": "defaultStyle",
            "module": "out-tsc/chrome/src/util/style/defaultStyle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/style/formStyle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "formStyle",
          "default": "css ` :host { position: relative; } textarea, select, input { font-family: var(--font-family), sans-serif; color: var(--font-color); border-radius: var(--border-radius); border: 1px solid var(--grey-5); padding-top: 20px; padding-bottom: 4px; padding-inline: 16px 40px; height: 54px; width: 100%; max-width: 100%; font-size: var(--font-size-l); outline: none; &:focus-visible, &:focus { border-color: var(--secondary); border-width: 2px; } } textarea, input { &:focus-visible, &:focus { + label { font-size: var(--font-size-s); top: 8px; } } } `"
        },
        {
          "kind": "variable",
          "name": "labelStyle",
          "default": "css ` label { position: absolute; top: 20px; font-size: var(--font-size-l); inset-inline-start: 16px; max-width: 100%; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; transition: all 240ms ease-out; color: var(--grey-7); } label.active { font-size: var(--font-size-s); top: 8px; } :host([inverse]) { label { color: var(--font-color-iverse); } } .asterisks { color: var(--grey-3); } `"
        },
        {
          "kind": "variable",
          "name": "formHintStyle",
          "default": "css ` .hint { display: block; padding: 4px 0 0 8px; font-size: var(--font-size-s); color: var(--grey-3); } `"
        },
        {
          "kind": "variable",
          "name": "formErrorStyle",
          "default": "css ` .err { display: block; padding: 4px 0 0 8px; color: var(--error); } :host([error]) { label { color: var(--error); } textarea, select, input { border-color: var(--error); } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "formStyle",
          "declaration": {
            "name": "formStyle",
            "module": "out-tsc/chrome/src/util/style/formStyle.js"
          }
        },
        {
          "kind": "js",
          "name": "labelStyle",
          "declaration": {
            "name": "labelStyle",
            "module": "out-tsc/chrome/src/util/style/formStyle.js"
          }
        },
        {
          "kind": "js",
          "name": "formHintStyle",
          "declaration": {
            "name": "formHintStyle",
            "module": "out-tsc/chrome/src/util/style/formStyle.js"
          }
        },
        {
          "kind": "js",
          "name": "formErrorStyle",
          "declaration": {
            "name": "formErrorStyle",
            "module": "out-tsc/chrome/src/util/style/formStyle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/style/resetStyle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "resetStyle",
          "default": "css ` div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video { margin: 0; padding: 0; border: 0; font-size: 100%; font: inherit; vertical-align: baseline; } ul, ol, li { padding: 0; margin: 0; list-style: none; } a { text-decoration: none; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "resetStyle",
          "declaration": {
            "name": "resetStyle",
            "module": "out-tsc/chrome/src/util/style/resetStyle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/style/textStyle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "textStyle",
          "default": "css ` h1, h2, h4, h6 { font-weight: bold; } h5, h4 { font-size: var(--font-size-l); } h3, h2 { font-size: 22px; } h1 { font-size: 28px; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "textStyle",
          "declaration": {
            "name": "textStyle",
            "module": "out-tsc/chrome/src/util/style/textStyle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/windowEventHandler/index.js",
      "declarations": [
        {
          "kind": "function",
          "name": "windowEventHandler",
          "parameters": [
            {
              "name": "eventName"
            },
            {
              "name": "timeoutMs"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "resizeHandler"
        },
        {
          "kind": "variable",
          "name": "scrollHandler"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "windowEventHandler",
          "declaration": {
            "name": "windowEventHandler",
            "module": "out-tsc/chrome/src/util/windowEventHandler/index.js"
          }
        },
        {
          "kind": "js",
          "name": "resizeHandler",
          "declaration": {
            "name": "resizeHandler",
            "module": "out-tsc/chrome/src/util/windowEventHandler/index.js"
          }
        },
        {
          "kind": "js",
          "name": "scrollHandler",
          "declaration": {
            "name": "scrollHandler",
            "module": "out-tsc/chrome/src/util/windowEventHandler/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/collapse/util/closeAllCollapses.js",
      "declarations": [
        {
          "kind": "function",
          "name": "closeAllCollapses",
          "parameters": [
            {
              "name": "collapses"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "closeAllCollapses",
          "declaration": {
            "name": "closeAllCollapses",
            "module": "out-tsc/chrome/src/component/collapse/util/closeAllCollapses.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/collapse/util/openAllCollapses.js",
      "declarations": [
        {
          "kind": "function",
          "name": "openAllCollapses",
          "parameters": [
            {
              "name": "collapses"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "openAllCollapses",
          "declaration": {
            "name": "openAllCollapses",
            "module": "out-tsc/chrome/src/component/collapse/util/openAllCollapses.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/collapse/util/openOnlyOneCollapse.js",
      "declarations": [
        {
          "kind": "function",
          "name": "openOnlyOneCollapse",
          "parameters": [
            {
              "name": "collapses"
            },
            {
              "name": "openId"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "openOnlyOneCollapse",
          "declaration": {
            "name": "openOnlyOneCollapse",
            "module": "out-tsc/chrome/src/component/collapse/util/openOnlyOneCollapse.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/collapse/util/resizeCollapses.js",
      "declarations": [
        {
          "kind": "function",
          "name": "resizeCollapses",
          "parameters": [
            {
              "name": "collapses"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "resizeCollapses",
          "declaration": {
            "name": "resizeCollapses",
            "module": "out-tsc/chrome/src/component/collapse/util/resizeCollapses.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/component/toast/util/toastFactory.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toastFactory"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toastFactory",
          "declaration": {
            "name": "toastFactory",
            "module": "out-tsc/chrome/src/component/toast/util/toastFactory.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/views/mocks/component/project/component/requestCard/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "field",
              "name": "req",
              "type": {
                "text": "IManifestRequest"
              }
            },
            {
              "kind": "field",
              "name": "activeMocks",
              "type": {
                "text": "IActiveMocks"
              }
            },
            {
              "kind": "field",
              "name": "projectId",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "number"
              }
            },
            {
              "kind": "field",
              "name": "statusArr",
              "type": {
                "text": "string[]"
              }
            },
            {
              "kind": "field",
              "name": "activeMockId",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[defaultStyle, textStyle, style]"
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "handleRequestToggle"
            },
            {
              "kind": "field",
              "name": "handleRequestStatus"
            },
            {
              "kind": "field",
              "name": "saveActiveMock"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Component",
          "declaration": {
            "name": "Component",
            "module": "src/views/mocks/component/project/component/requestCard/index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-mock-project-request-card",
          "declaration": {
            "name": "Component",
            "module": "src/views/mocks/component/project/component/requestCard/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/views/mocks/component/project/component/requestCard/style.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css` header { margin-bottom: 16px; display: flex; justify-content: left; gap: 16px; align-items: center; wf-switch { margin-left: auto; } wf-button svg { fill: var(--primary); } } :host { padding: 16px; border: 1px solid var(--grey-5); border-radius: var(--border-radius); margin-bottom: 20px; } header { padding-bottom: 8px; border-bottom: 1px solid var(--grey-1); } .cnt { display: grid; gap: 16px; grid-template-columns: repeat(3, 1fr); } dl { margin-bottom: 16px; } .flag { display: inline-block; padding: 4px 8px; margin-right: 16px; border: 1px solid; border-radius: 999em; &.get { color: #1fa900; border-color: #1fa900; } &.post { color: #f58200; border-color: #f58200; } &.put { color: #0091a4; border-color: #0091a4; } &.delete { color: #9f1300; border-color: #9f1300; } &.patch { color: #0275bb; border-color: #0275bb; } } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "src/views/mocks/component/project/component/requestCard/style.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/formController/validators/max.js",
      "declarations": [
        {
          "kind": "function",
          "name": "max",
          "parameters": [
            {
              "name": "value"
            },
            {
              "name": "item"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "max",
          "declaration": {
            "name": "max",
            "module": "out-tsc/chrome/src/util/formController/validators/max.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/formController/validators/maxLength.js",
      "declarations": [
        {
          "kind": "function",
          "name": "maxLength",
          "parameters": [
            {
              "name": "value"
            },
            {
              "name": "item"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "maxLength",
          "declaration": {
            "name": "maxLength",
            "module": "out-tsc/chrome/src/util/formController/validators/maxLength.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/formController/validators/min.js",
      "declarations": [
        {
          "kind": "function",
          "name": "min",
          "parameters": [
            {
              "name": "value"
            },
            {
              "name": "item"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "min",
          "declaration": {
            "name": "min",
            "module": "out-tsc/chrome/src/util/formController/validators/min.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/formController/validators/minLength.js",
      "declarations": [
        {
          "kind": "function",
          "name": "minLength",
          "parameters": [
            {
              "name": "value"
            },
            {
              "name": "item"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "minLength",
          "declaration": {
            "name": "minLength",
            "module": "out-tsc/chrome/src/util/formController/validators/minLength.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/formController/validators/regex.js",
      "declarations": [
        {
          "kind": "function",
          "name": "regex",
          "parameters": [
            {
              "name": "value"
            },
            {
              "name": "item"
            },
            {
              "name": "regex"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "regex",
          "declaration": {
            "name": "regex",
            "module": "out-tsc/chrome/src/util/formController/validators/regex.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/formController/validators/required.js",
      "declarations": [
        {
          "kind": "function",
          "name": "required",
          "parameters": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "required",
          "declaration": {
            "name": "required",
            "module": "out-tsc/chrome/src/util/formController/validators/required.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/util/formController/validators/secure.js",
      "declarations": [
        {
          "kind": "function",
          "name": "secure",
          "parameters": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "secure",
          "declaration": {
            "name": "secure",
            "module": "out-tsc/chrome/src/util/formController/validators/secure.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/views/projects/component/project-form/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "isUpdate",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "values",
              "type": {
                "text": "object"
              },
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "showForm",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "form",
              "default": "new FormController(this)"
            },
            {
              "kind": "field",
              "name": "handleCancel"
            },
            {
              "kind": "field",
              "name": "handleDelete"
            },
            {
              "kind": "field",
              "name": "handleFormSubmit"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Component",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/views/projects/component/project-form/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-project-form",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/views/projects/component/project-form/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/views/projects/component/project-form/style.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css ` :host * { margin-bottom: 16px; } wf-button { margin-bottom: 0; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "out-tsc/chrome/src/views/projects/component/project-form/style.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/views/mocks/component/project/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Component",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/views/mocks/component/project/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-view-project",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/views/mocks/component/project/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/views/mocks/component/project/style.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css ` `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "out-tsc/chrome/src/views/mocks/component/project/style.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/views/mocks/component/projects/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Component",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/views/mocks/component/projects/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-view-projects",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/views/mocks/component/projects/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/views/mocks/component/projects/style.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css ` `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "out-tsc/chrome/src/views/mocks/component/projects/style.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/views/projects/component/project-list/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Component",
          "members": [
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "renderProject"
            },
            {
              "kind": "field",
              "name": "editProject"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "wf-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Component",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/views/projects/component/project-list/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "wf-project-list",
          "declaration": {
            "name": "Component",
            "module": "out-tsc/chrome/src/views/projects/component/project-list/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/chrome/src/views/projects/component/project-list/style.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "style",
          "default": "css ` li { display: flex; justify-content: space-between; align-items: center; padding: 16px; border: 1px solid var(--grey-5); border-radius: var(--border-radius); margin-bottom: 8px; &:last-child { margin-bottom: 0; } } wf-button { border-radius: 50%; width: 32px; height: 32px; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "style",
          "declaration": {
            "name": "style",
            "module": "out-tsc/chrome/src/views/projects/component/project-list/style.js"
          }
        }
      ]
    }
  ]
}
